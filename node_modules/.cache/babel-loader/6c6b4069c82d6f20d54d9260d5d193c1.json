{"ast":null,"code":"import { Redirect } from \"react-router-dom\";\nimport axios from \"../helpers/axios\";\nimport { authConstants, cartConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(\"/login\", { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const register = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.REGISTER_REQUEST\n    });\n    const res = await axios.post(\"/register\", { ...user\n    });\n\n    if (res.status === 201) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.REGISTER_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n      Swal.fire(\"Wow.\", \"Register Successful.!\", \"success\");\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.REGISTER_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n        Swal.fire(\"Oops...\", \"Something went wrong!\", \"error\");\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.REGISTER_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Failed to Login\"\n        }\n      });\n    }\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n    Swal.fire(\"Great..\", \"Logout\", \"success\");\n    dispatch({\n      type: cartConstants.RESET_CART\n    }); // const res = await axios.post(\"/logout\");\n    // if (res.status === 200) {\n    // \tlocalStorage.clear();\n    // \tdispatch({\n    // \t\ttype: authConstants.LOGOUT_SUCCESS,\n    // \t});\n    // } else {\n    // \tdispatch({\n    // \t\ttype: authConstants.LOGOUT_FAILURE,\n    // \t\tpayload: { error: res.data.error },\n    // \t});\n    // }\n  };\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/actions/auth.action.js"],"names":["Redirect","axios","authConstants","cartConstants","Swal","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","register","REGISTER_REQUEST","REGISTER_SUCCESS","fire","REGISTER_FAILURE","isUserLoggedIn","getItem","parse","logout","LOGOUT_REQUEST","removeItem","LOGOUT_SUCCESS","RESET_CART"],"mappings":"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","sourcesContent":["import { Redirect } from \"react-router-dom\";\nimport axios from \"../helpers/axios\";\nimport { authConstants, cartConstants } from \"./constants\";\nimport Swal from \"sweetalert2\";\n\nexport const login = (user) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: authConstants.LOGIN_REQUEST });\n\t\tconst res = await axios.post(\"/login\", {\n\t\t\t...user,\n\t\t});\n\n\t\tif (res.status === 200) {\n\t\t\tconst { token, user } = res.data;\n\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(user));\n\t\t\tdispatch({\n\t\t\t\ttype: authConstants.LOGIN_SUCCESS,\n\t\t\t\tpayload: {\n\t\t\t\t\ttoken,\n\t\t\t\t\tuser,\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tif (res.status === 400) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: authConstants.LOGIN_FAILURE,\n\t\t\t\t\tpayload: { error: res.data.error },\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n};\n\n\nexport const register= (user) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: authConstants.REGISTER_REQUEST });\n\t\tconst res = await axios.post(\"/register\", {\n\t\t\t...user,\n\t\t});\n\n\t\tif (res.status === 201) {\n\t\t\tconst { token, user } = res.data;\n\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(user));\n\t\t\tdispatch({\n\t\t\t\ttype: authConstants.REGISTER_SUCCESS,\n\t\t\t\tpayload: {\n\t\t\t\t\ttoken,\n\t\t\t\t\tuser,\n\t\t\t\t},\n\t\t\t});\n\t\t\tSwal.fire(\"Wow.\", \"Register Successful.!\", \"success\");\n\t\t} else {\n\t\t\tif (res.status === 400) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: authConstants.REGISTER_FAILURE,\n\t\t\t\t\tpayload: { error: res.data.error },\n\t\t\t\t});\n\t\t\t\tSwal.fire(\"Oops...\", \"Something went wrong!\", \"error\");\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport const isUserLoggedIn = () => {\n\treturn async (dispatch) => {\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (token) {\n\t\t\tconst user = JSON.parse(localStorage.getItem(\"user\"));\n\t\t\tdispatch({\n\t\t\t\ttype: authConstants.REGISTER_SUCCESS,\n\t\t\t\tpayload: {\n\t\t\t\t\ttoken,\n\t\t\t\t\tuser,\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: authConstants.LOGIN_FAILURE,\n\t\t\t\tpayload: { error: \"Failed to Login\" },\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport const logout = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: authConstants.LOGOUT_REQUEST,\n\t\t});\n\t\tlocalStorage.removeItem('user');\n\t\tlocalStorage.removeItem('token');\n\t\tdispatch({\n\t\t\ttype: authConstants.LOGOUT_SUCCESS,\n\t\t});\n\t\tSwal.fire(\"Great..\", \"Logout\", \"success\");\n\t\tdispatch({\n\t\t\ttype: cartConstants.RESET_CART,\n\t\t});\n\n\t\t// const res = await axios.post(\"/logout\");\n\t\t// if (res.status === 200) {\n\t\t// \tlocalStorage.clear();\n\t\t// \tdispatch({\n\t\t// \t\ttype: authConstants.LOGOUT_SUCCESS,\n\t\t// \t});\n\t\t// } else {\n\t\t// \tdispatch({\n\t\t// \t\ttype: authConstants.LOGOUT_FAILURE,\n\t\t// \t\tpayload: { error: res.data.error },\n\t\t// \t});\n\t\t// }\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}