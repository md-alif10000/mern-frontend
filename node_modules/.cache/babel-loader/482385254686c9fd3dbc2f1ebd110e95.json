{"ast":null,"code":"import axios from \"axios\";\nimport { api } from \"../urlconfig\";\nimport store from \"../store\";\nimport { authConstants } from \"../actions/constants\";\nconst token = window.localStorage.getItem(\"token\");\nconst axiosIntance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? `Bearer ${token}` : \"\"\n  }\n});\naxiosIntance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n\n  return req;\n});\naxiosIntance.interceptors.response.use(res => {\n  return res;\n}, error => {\n  console.log(error.response);\n  const status = error.response ? error.response.status : 500;\n\n  if (status && status === 500) {\n    localStorage.clear();\n    store.dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosIntance;","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-frontend/src/helpers/axios.js"],"names":["axios","api","store","authConstants","token","window","localStorage","getItem","axiosIntance","create","baseURL","headers","Authorization","interceptors","request","use","req","auth","getState","response","res","error","console","log","status","clear","dispatch","type","LOGOUT_SUCCESS","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAET,GADwB;AAEjCU,EAAAA,OAAO,EAAE;AACRC,IAAAA,aAAa,EAAER,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADnC;AAFwB,CAAb,CAArB;AAOAI,YAAY,CAACK,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAuCC,GAAD,IAAS;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAWf,KAAK,CAACgB,QAAN,EAAjB;;AACA,MAAID,IAAI,CAACb,KAAT,EAAgB;AACfY,IAAAA,GAAG,CAACL,OAAJ,CAAYC,aAAZ,GAA6B,UAASK,IAAI,CAACb,KAAM,EAAjD;AACA;;AACD,SAAOY,GAAP;AACA,CAND;AAQAR,YAAY,CAACK,YAAb,CAA0BM,QAA1B,CAAmCJ,GAAnC,CACEK,GAAD,IAAS;AACR,SAAOA,GAAP;AACA,CAHF,EAIEC,KAAD,IAAW;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACA,QAAMK,MAAM,GAAGH,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACF,QAAN,CAAeK,MAAhC,GAAyC,GAAxD;;AACA,MAAIA,MAAM,IAAIA,MAAM,KAAK,GAAzB,EAA8B;AAC7BlB,IAAAA,YAAY,CAACmB,KAAb;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAExB,aAAa,CAACyB;AAAtB,KAAf;AACA;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeT,KAAf,CAAP;AACA,CAZF;AAeA,eAAeb,YAAf","sourcesContent":["import axios from \"axios\";\r\nimport { api } from \"../urlconfig\";\r\nimport store from \"../store\";\r\nimport { authConstants } from \"../actions/constants\";\r\n\r\nconst token = window.localStorage.getItem(\"token\");\r\n\r\nconst axiosIntance = axios.create({\r\n\tbaseURL: api,\r\n\theaders: {\r\n\t\tAuthorization: token ? `Bearer ${token}` : \"\",\r\n\t},\r\n});\r\n\r\naxiosIntance.interceptors.request.use((req) => {\r\n\tconst { auth } = store.getState();\r\n\tif (auth.token) {\r\n\t\treq.headers.Authorization = `Bearer ${auth.token}`;\r\n\t}\r\n\treturn req;\r\n});\r\n\r\naxiosIntance.interceptors.response.use(\r\n\t(res) => {\r\n\t\treturn res;\r\n\t},\r\n\t(error) => {\r\n\t\tconsole.log(error.response);\r\n\t\tconst status = error.response ? error.response.status : 500;\r\n\t\tif (status && status === 500) {\r\n\t\t\tlocalStorage.clear();\r\n\t\t\tstore.dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n\t\t}\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nexport default axiosIntance;\r\n"]},"metadata":{},"sourceType":"module"}