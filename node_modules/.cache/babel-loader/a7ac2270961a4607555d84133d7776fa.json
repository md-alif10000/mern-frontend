{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useDispatch,useSelector}from'react-redux';import{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableContainer from\"@material-ui/core/TableContainer\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";import{getRecharges}from\"../../actions/recharge.action\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({table:{minWidth:300}});function createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData(\"Frozen yoghurt\",159,6.0,24,4.0),createData(\"Ice cream sandwich\",237,9.0,37,4.3),createData(\"Eclair\",262,16.0,24,6.0),createData(\"Cupcake\",305,3.7,67,4.3),createData(\"Gingerbread\",356,16.0,49,3.9)];export default function BasicTable(){var classes=useStyles();var dispatch=useDispatch();// useEffect(() => {\n// \tdispatch(getRecharges());\n// }, []);\ndispatch(getRecharges());var user=useSelector(function(state){return state.user;});var allRecharge=user.recharges;return/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsx(Table,{className:classes.table,\"aria-label\":\"simple table\",children:/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Dessert (100g serving)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Fat\\xA0(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Carbs\\xA0(g)\"})]})})})});}","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-frontend/src/containers/Recharge/history.js"],"names":["React","useState","useEffect","useDispatch","useSelector","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","getRecharges","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","BasicTable","classes","dispatch","user","state","allRecharge","recharges"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,WAAR,CAAoBC,WAApB,KAAsC,aAAtC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,OAASC,YAAT,KAA6B,+BAA7B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,CAC5BU,KAAK,CAAE,CACNC,QAAQ,CAAE,GADJ,CADqB,CAAD,CAA5B,CAMA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,QAA1B,CAAoCC,GAApC,CAAyCC,KAAzC,CAAgDC,OAAhD,CAAyD,CACxD,MAAO,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,GAAG,CAAHA,GAAlB,CAAuBC,KAAK,CAALA,KAAvB,CAA8BC,OAAO,CAAPA,OAA9B,CAAP,CACA,CAED,GAAMC,CAAAA,IAAI,CAAG,CACZN,UAAU,CAAC,gBAAD,CAAmB,GAAnB,CAAwB,GAAxB,CAA6B,EAA7B,CAAiC,GAAjC,CADE,CAEZA,UAAU,CAAC,oBAAD,CAAuB,GAAvB,CAA4B,GAA5B,CAAiC,EAAjC,CAAqC,GAArC,CAFE,CAGZA,UAAU,CAAC,QAAD,CAAW,GAAX,CAAgB,IAAhB,CAAsB,EAAtB,CAA0B,GAA1B,CAHE,CAIZA,UAAU,CAAC,SAAD,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,EAAtB,CAA0B,GAA1B,CAJE,CAKZA,UAAU,CAAC,aAAD,CAAgB,GAAhB,CAAqB,IAArB,CAA2B,EAA3B,CAA+B,GAA/B,CALE,CAAb,CAQA,cAAe,SAASO,CAAAA,UAAT,EAAsB,CAEpC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,GAAMY,CAAAA,QAAQ,CAAGvB,WAAW,EAA5B,CAEA;AACA;AAEA;AACAuB,QAAQ,CAACb,YAAY,EAAb,CAAR,CACQ,GAAMc,CAAAA,IAAI,CAAGvB,WAAW,CAAC,SAACwB,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACJ,GAAME,CAAAA,WAAW,CAAGF,IAAI,CAACG,SAAzB,CAIJ,mBACC,KAAC,cAAD,EAAgB,SAAS,CAAElB,KAA3B,uBACC,KAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACV,KAA1B,CAAiC,aAAW,cAA5C,uBACC,KAAC,SAAD,wBACC,MAAC,QAAD,yBACC,KAAC,SAAD,qCADD,cAEC,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,sBAFD,cAGC,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,wBAHD,cAIC,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,0BAJD,GADD,EADD,EADD,EADD,CA2BA","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport {useDispatch,useSelector} from 'react-redux'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { getRecharges } from \"../../actions/recharge.action\";\n\nconst useStyles = makeStyles({\n\ttable: {\n\t\tminWidth: 300,\n\t},\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n\treturn { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n\tcreateData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n\tcreateData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n\tcreateData(\"Eclair\", 262, 16.0, 24, 6.0),\n\tcreateData(\"Cupcake\", 305, 3.7, 67, 4.3),\n\tcreateData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function BasicTable() {\n\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\t// useEffect(() => {\n\t// \tdispatch(getRecharges());\n     \n\t// }, []);\n\tdispatch(getRecharges());\n         const user = useSelector((state) => state.user);\n\t\t\t\t\tconst allRecharge = user.recharges;\n\t\n\t\n\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table className={classes.table} aria-label='simple table'>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Dessert (100g serving)</TableCell>\n\t\t\t\t\t\t<TableCell align='right'>Calories</TableCell>\n\t\t\t\t\t\t<TableCell align='right'>Fat&nbsp;(g)</TableCell>\n\t\t\t\t\t\t<TableCell align='right'>Carbs&nbsp;(g)</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t{/* {console.log(\"Recharges\", allRecharge)} */}\n\t\t\t\t{/* <TableBody>\n\t\t\t\t\t{allRecharge.foreach(recharge => (\n\t\t\t\t\t\t<TableRow key={recharge.number}>\n\t\t\t\t\t\t\t<TableCell component='th' scope='row'>\n\t\t\t\t\t\t\t\t{recharge.number}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell align='right'>{recharge.amount}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='right'>{recharge.provider}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='right'>{recharge.type}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody> */}\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}