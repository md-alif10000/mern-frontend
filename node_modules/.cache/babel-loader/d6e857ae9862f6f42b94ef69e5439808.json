{"ast":null,"code":"var _jsxFileName = \"/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/Recharge/history.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    \"& .ReactVirtualized__Table__headerRow\": {\n      flip: false,\n      paddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined\n    }\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: \"initial\"\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getRowClassName = ({\n      index\n    }) => {\n      const {\n        classes,\n        onRowClick\n      } = this.props;\n      return clsx(classes.tableRow, classes.flexContainer, {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      });\n    };\n\n    this.cellRenderer = ({\n      cellData,\n      columnIndex\n    }) => {\n      const {\n        columns,\n        classes,\n        rowHeight,\n        onRowClick\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        }),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? \"right\" : \"left\",\n        children: cellData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.headerRenderer = ({\n      label,\n      columnIndex\n    }) => {\n      const {\n        headerHeight,\n        columns,\n        classes\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? \"right\" : \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(AutoSizer, {\n      children: ({\n        height,\n        width\n      }) => /*#__PURE__*/_jsxDEV(Table, {\n        height: height,\n        width: width,\n        rowHeight: rowHeight,\n        gridStyle: {\n          direction: \"inherit\"\n        },\n        headerHeight: headerHeight,\n        className: classes.table,\n        ...tableProps,\n        rowClassName: this.getRowClassName,\n        children: columns.map(({\n          dataKey,\n          ...other\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            headerRenderer: headerProps => this.headerRenderer({ ...headerProps,\n              columnIndex: index\n            }),\n            className: classes.flexContainer,\n            cellRenderer: this.cellRenderer,\n            dataKey: dataKey,\n            ...other\n          }, dataKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 48,\n  rowHeight: 48\n};\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    dataKey: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    numeric: PropTypes.bool,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable); // ---\n\nconst sample = [[\"Frozen yoghurt\", 159, 6.0, 24, 4.0], [\"Ice cream sandwich\", 237, 9.0, 37, 4.3], [\"Eclair\", 262, 16.0, 24, 6.0], [\"Cupcake\", 305, 3.7, 67, 4.3], [\"Gingerbread\", 356, 16.0, 49, 3.9]];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return {\n    id,\n    dessert,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData(i, ...randomSelection));\n}\n\nexport default function ReactVirtualizedTable() {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(VirtualizedTable, {\n      rowCount: rows.length,\n      rowGetter: ({\n        index\n      }) => rows[index],\n      columns: [{\n        width: 200,\n        label: \"Dessert\",\n        dataKey: \"dessert\"\n      }, {\n        width: 120,\n        label: \"Calories\\u00A0(g)\",\n        dataKey: \"calories\",\n        numeric: true\n      }, {\n        width: 120,\n        label: \"Fat\\u00A0(g)\",\n        dataKey: \"fat\",\n        numeric: true\n      }, {\n        width: 120,\n        label: \"Carbs\\u00A0(g)\",\n        dataKey: \"carbs\",\n        numeric: true\n      }, {\n        width: 120,\n        label: \"Protein\\u00A0(g)\",\n        dataKey: \"protein\",\n        numeric: true\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 3\n  }, this);\n}\n_c = ReactVirtualizedTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactVirtualizedTable\");","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/Recharge/history.js"],"names":["React","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","styles","theme","flexContainer","display","alignItems","boxSizing","table","flip","paddingRight","direction","undefined","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","PureComponent","getRowClassName","index","classes","onRowClick","props","cellRenderer","cellData","columnIndex","columns","rowHeight","height","numeric","headerRenderer","label","headerHeight","render","tableProps","width","map","dataKey","other","headerProps","defaultProps","propTypes","object","isRequired","arrayOf","shape","string","bool","number","func","VirtualizedTable","sample","createData","id","dessert","calories","fat","carbs","protein","rows","i","randomSelection","Math","floor","random","length","push","ReactVirtualizedTable"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nconst styles = (theme) => ({\n\tflexContainer: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tboxSizing: \"border-box\",\n\t},\n\ttable: {\n\t\t// temporary right-to-left patch, waiting for\n\t\t// https://github.com/bvaughn/react-virtualized/issues/454\n\t\t\"& .ReactVirtualized__Table__headerRow\": {\n\t\t\tflip: false,\n\t\t\tpaddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined,\n\t\t},\n\t},\n\ttableRow: {\n\t\tcursor: \"pointer\",\n\t},\n\ttableRowHover: {\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: theme.palette.grey[200],\n\t\t},\n\t},\n\ttableCell: {\n\t\tflex: 1,\n\t},\n\tnoClick: {\n\t\tcursor: \"initial\",\n\t},\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n\tstatic defaultProps = {\n\t\theaderHeight: 48,\n\t\trowHeight: 48,\n\t};\n\n\tgetRowClassName = ({ index }) => {\n\t\tconst { classes, onRowClick } = this.props;\n\n\t\treturn clsx(classes.tableRow, classes.flexContainer, {\n\t\t\t[classes.tableRowHover]: index !== -1 && onRowClick != null,\n\t\t});\n\t};\n\n\tcellRenderer = ({ cellData, columnIndex }) => {\n\t\tconst { columns, classes, rowHeight, onRowClick } = this.props;\n\t\treturn (\n\t\t\t<TableCell\n\t\t\t\tcomponent='div'\n\t\t\t\tclassName={clsx(classes.tableCell, classes.flexContainer, {\n\t\t\t\t\t[classes.noClick]: onRowClick == null,\n\t\t\t\t})}\n\t\t\t\tvariant='body'\n\t\t\t\tstyle={{ height: rowHeight }}\n\t\t\t\talign={\n\t\t\t\t\t(columnIndex != null && columns[columnIndex].numeric) || false\n\t\t\t\t\t\t? \"right\"\n\t\t\t\t\t\t: \"left\"\n\t\t\t\t}>\n\t\t\t\t{cellData}\n\t\t\t</TableCell>\n\t\t);\n\t};\n\n\theaderRenderer = ({ label, columnIndex }) => {\n\t\tconst { headerHeight, columns, classes } = this.props;\n\n\t\treturn (\n\t\t\t<TableCell\n\t\t\t\tcomponent='div'\n\t\t\t\tclassName={clsx(\n\t\t\t\t\tclasses.tableCell,\n\t\t\t\t\tclasses.flexContainer,\n\t\t\t\t\tclasses.noClick\n\t\t\t\t)}\n\t\t\t\tvariant='head'\n\t\t\t\tstyle={{ height: headerHeight }}\n\t\t\t\talign={columns[columnIndex].numeric || false ? \"right\" : \"left\"}>\n\t\t\t\t<span>{label}</span>\n\t\t\t</TableCell>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tcolumns,\n\t\t\trowHeight,\n\t\t\theaderHeight,\n\t\t\t...tableProps\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<AutoSizer>\n\t\t\t\t{({ height, width }) => (\n\t\t\t\t\t<Table\n\t\t\t\t\t\theight={height}\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\tgridStyle={{\n\t\t\t\t\t\t\tdirection: \"inherit\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\theaderHeight={headerHeight}\n\t\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\t\t{...tableProps}\n\t\t\t\t\t\trowClassName={this.getRowClassName}>\n\t\t\t\t\t\t{columns.map(({ dataKey, ...other }, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\t\tkey={dataKey}\n\t\t\t\t\t\t\t\t\theaderRenderer={(headerProps) =>\n\t\t\t\t\t\t\t\t\t\tthis.headerRenderer({\n\t\t\t\t\t\t\t\t\t\t\t...headerProps,\n\t\t\t\t\t\t\t\t\t\t\tcolumnIndex: index,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclassName={classes.flexContainer}\n\t\t\t\t\t\t\t\t\tcellRenderer={this.cellRenderer}\n\t\t\t\t\t\t\t\t\tdataKey={dataKey}\n\t\t\t\t\t\t\t\t\t{...other}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t</AutoSizer>\n\t\t);\n\t}\n}\n\nMuiVirtualizedTable.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\tcolumns: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tdataKey: PropTypes.string.isRequired,\n\t\t\tlabel: PropTypes.string.isRequired,\n\t\t\tnumeric: PropTypes.bool,\n\t\t\twidth: PropTypes.number.isRequired,\n\t\t})\n\t).isRequired,\n\theaderHeight: PropTypes.number,\n\tonRowClick: PropTypes.func,\n\trowHeight: PropTypes.number,\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n// ---\n\nconst sample = [\n\t[\"Frozen yoghurt\", 159, 6.0, 24, 4.0],\n\t[\"Ice cream sandwich\", 237, 9.0, 37, 4.3],\n\t[\"Eclair\", 262, 16.0, 24, 6.0],\n\t[\"Cupcake\", 305, 3.7, 67, 4.3],\n\t[\"Gingerbread\", 356, 16.0, 49, 3.9],\n];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n\treturn { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n\tconst randomSelection = sample[Math.floor(Math.random() * sample.length)];\n\trows.push(createData(i, ...randomSelection));\n}\n\nexport default function ReactVirtualizedTable() {\n\treturn (\n\t\t<Paper style={{ height: 400, width: \"100%\" }}>\n\t\t\t<VirtualizedTable\n\t\t\t\trowCount={rows.length}\n\t\t\t\trowGetter={({ index }) => rows[index]}\n\t\t\t\tcolumns={[\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\tlabel: \"Dessert\",\n\t\t\t\t\t\tdataKey: \"dessert\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 120,\n\t\t\t\t\t\tlabel: \"Calories\\u00A0(g)\",\n\t\t\t\t\t\tdataKey: \"calories\",\n\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 120,\n\t\t\t\t\t\tlabel: \"Fat\\u00A0(g)\",\n\t\t\t\t\t\tdataKey: \"fat\",\n\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 120,\n\t\t\t\t\t\tlabel: \"Carbs\\u00A0(g)\",\n\t\t\t\t\t\tdataKey: \"carbs\",\n\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 120,\n\t\t\t\t\t\tlabel: \"Protein\\u00A0(g)\",\n\t\t\t\t\t\tdataKey: \"protein\",\n\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Paper>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}