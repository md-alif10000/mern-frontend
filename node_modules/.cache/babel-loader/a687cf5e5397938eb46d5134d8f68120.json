{"ast":null,"code":"import _objectSpread from\"/home/mdalif/Desktop/coding/MERN/mern-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/home/mdalif/Desktop/coding/MERN/mern-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/home/mdalif/Desktop/coding/MERN/mern-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{categoryConstants}from\"../actions/constants\";var initState={categories:[],loading:false,error:null,subCategories:[]};var buildNewCategories=function buildNewCategories(parentId,categories,category){var myCategories=[];if(parentId==undefined){return[].concat(_toConsumableArray(categories),[{_id:category._id,name:category.name,slug:category.slug,children:[]}]);}var _iterator=_createForOfIteratorHelper(categories),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var cat=_step.value;if(cat._id==parentId){myCategories.push(_objectSpread(_objectSpread({},cat),{},{children:cat.children&&cat.children.length>0?buildNewCategories(parentId,[].concat(_toConsumableArray(cat.children),[{_id:category._id,name:category.name,slug:category.slug,parentId:category.parentId,children:category.children}]),category):[]}));}else{myCategories.push(_objectSpread(_objectSpread({},cat),{},{children:cat.children?buildNewCategories(parentId,cat.children,category):[]}));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return myCategories;};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:state=_objectSpread(_objectSpread({},state),{},{categories:action.payload.categories});break;case categoryConstants.ADD_NEW_CATEGORY_REQUEST:state=_objectSpread(_objectSpread({},state),{},{loading:true});break;case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:var category=action.payload.category;var updatedCategories=buildNewCategories(category.parentId,state.categories,category);console.log(\"updated categories\",updatedCategories);state=_objectSpread(_objectSpread({},state),{},{categories:updatedCategories,loading:false});break;case categoryConstants.ADD_NEW_CATEGORY_FAILURE:state=_objectSpread({},initState);break;case categoryConstants.GET_SUB_CATEGORY_REQUEST:state=_objectSpread(_objectSpread({},state),{},{loading:true});break;case categoryConstants.GET_SUB_CATEGORY_SUCCESS:state=_objectSpread(_objectSpread({},state),{},{loading:false,subCategories:action.payload.data});break;case categoryConstants.ADD_NEW_CATEGORY_FAILURE:state=_objectSpread(_objectSpread({},state),{},{loading:false});}return state;});","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-frontend/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","subCategories","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","children","cat","push","length","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE","GET_SUB_CATEGORY_REQUEST","GET_SUB_CATEGORY_SUCCESS","data"],"mappings":"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","sourcesContent":["import { categoryConstants } from \"../actions/constants\";\n\nconst initState = {\n\tcategories: [],\n\tloading: false,\n\terror: null,\n\tsubCategories: [],\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n\tlet myCategories = [];\n\tif (parentId == undefined) {\n\t\treturn [\n\t\t\t...categories,\n\t\t\t{\n\t\t\t\t_id: category._id,\n\t\t\t\tname: category.name,\n\t\t\t\tslug: category.slug,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t];\n\t}\n\n\tfor (let cat of categories) {\n\t\tif (cat._id == parentId) {\n\t\t\tmyCategories.push({\n\t\t\t\t...cat,\n\t\t\t\tchildren:\n\t\t\t\t\tcat.children && cat.children.length > 0\n\t\t\t\t\t\t? buildNewCategories(\n\t\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t...cat.children,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t_id: category._id,\n\t\t\t\t\t\t\t\t\t\tname: category.name,\n\t\t\t\t\t\t\t\t\t\tslug: category.slug,\n\t\t\t\t\t\t\t\t\t\tparentId: category.parentId,\n\t\t\t\t\t\t\t\t\t\tchildren: category.children,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcategory\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: [],\n\t\t\t});\n\t\t} else {\n\t\t\tmyCategories.push({\n\t\t\t\t...cat,\n\t\t\t\tchildren: cat.children\n\t\t\t\t\t? buildNewCategories(parentId, cat.children, category)\n\t\t\t\t\t: [],\n\t\t\t});\n\t\t}\n\t}\n\treturn myCategories;\n};\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tcategories: action.payload.categories,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n\t\t\tconst category = action.payload.category;\n\n\t\t\tconst updatedCategories = buildNewCategories(\n\t\t\t\tcategory.parentId,\n\t\t\t\tstate.categories,\n\t\t\t\tcategory\n\t\t\t);\n\n\t\t\tconsole.log(\"updated categories\", updatedCategories);\n\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tcategories: updatedCategories,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n\t\t\tstate = {\n\t\t\t\t...initState,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.GET_SUB_CATEGORY_REQUEST:\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.GET_SUB_CATEGORY_SUCCESS:\n\t\t\tstate = {\n\t\t\t\t...state,\n                loading:false,\n\t\t\t\tsubCategories: action.payload.data,\n\t\t\t};\n\t\t\tbreak;\n            case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n                state={\n                    ...state,\n                    loading:false\n                }\n\t}\n\treturn state;\n};\n"]},"metadata":{},"sourceType":"module"}