{"ast":null,"code":"import { userConstants, cartConstants } from './constants';\nimport axios from '../helpers/axios';\nexport const getAddress = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.post('/user/getaddress');\n      dispatch({\n        type: userConstants.GET_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          userAddress: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addAddress = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post('/user/address/create', {\n        payload\n      });\n      dispatch({\n        type: userConstants.ADD_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status == 201) {\n        console.log(res); // const {userAddress:{\n        //     address\n        // }}=res.data\n        // dispatch({\n        //     type:userConstants.ADD_USER_ADDRESS_SUCCESS,\n        //     payload:{address}\n        // })\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/addOrder`, payload);\n      dispatch({\n        type: userConstants.ADD_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: cartConstants.RESET_CART\n        });\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_SUCCESS,\n          payload: {\n            order\n          }\n        }); // const {\n        //   address: { address },\n        // } = res.data;\n        // dispatch({\n        //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n        //   payload: { address },\n        // });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/actions/user.action.js"],"names":["userConstants","cartConstants","axios","getAddress","dispatch","res","post","type","GET_USER_ADDRESS_REQUEST","status","userAddress","address","data","ADD_USER_ADDRESS_SUCCESS","payload","error","GET_USER_ADDRESS_FAILURE","console","log","addAddress","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_FAILURE","addOrder","ADD_USER_ORDER_REQUEST","order","RESET_CART","ADD_USER_ORDER_SUCCESS","ADD_USER_ORDER_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants,cartConstants } from './constants'\nimport axios from '../helpers/axios'\n\nexport const getAddress=()=>{\n    return async dispatch=>{\n        try{\n            const res=await axios.post('/user/getaddress')\n            dispatch({type:userConstants.GET_USER_ADDRESS_REQUEST})\n            if(res.status===200){\n                const {\n                    userAddress:{address}\n                }=res.data\n                dispatch({type:userConstants.ADD_USER_ADDRESS_SUCCESS,\n                    payload:{address}},\n                    )\n            }else{\n                const {error}=res.data\n                dispatch({\n                    type:userConstants.GET_USER_ADDRESS_FAILURE,\n                    payload:{error}\n                })\n\n            }\n        }catch(error){\n            console.log(error)\n\n\n        }\n    }\n}\n\n\n\nexport const addAddress=(payload)=>{\n    return async dispatch=>{\n        try{\n            const res=await axios.post('/user/address/create',{payload})\n            dispatch({type:userConstants.ADD_USER_ADDRESS_REQUEST})\n            if(res.status==201){\n\n                console.log(res)\n                // const {userAddress:{\n                //     address\n                // }}=res.data\n                // dispatch({\n                //     type:userConstants.ADD_USER_ADDRESS_SUCCESS,\n                //     payload:{address}\n                // })\n            }else{\n                const {error}=res.data\n                dispatch({\n                    type:userConstants.ADD_USER_ADDRESS_FAILURE,\n                    payload:{error}\n                })\n            }\n\n        }catch(error){\n            console.log(error)\n\n        }\n    }\n}\n\n\nexport const addOrder = (payload) => {\n    return async (dispatch) => {\n      try {\n        const res = await axios.post(`/addOrder`, payload);\n        dispatch({ type: userConstants.ADD_USER_ORDER_REQUEST });\n        if (res.status === 201) {\n          console.log(res);\n          const { order } = res.data;\n          dispatch({\n            type: cartConstants.RESET_CART,\n          });\n          dispatch({\n            type: userConstants.ADD_USER_ORDER_SUCCESS,\n            payload: { order },\n          });\n          // const {\n          //   address: { address },\n          // } = res.data;\n          // dispatch({\n          //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          //   payload: { address },\n          // });\n        } else {\n          const { error } = res.data;\n          dispatch({\n            type: userConstants.ADD_USER_ORDER_FAILURE,\n            payload: { error },\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  };"]},"metadata":{},"sourceType":"module"}