{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../../components/Layout\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import {\n// \taddToCart,\n// \tdecreaseCart,\n// \tgetCartItems,\n// } from \"../../actions/cart.action\";\n// import Card from \"../../components/UI/Card\";\n// import CartItem from \"./CartItem\";\n// import \"./style.css\";\n// import CartItem2 from \"./CartItem/index2\";\n// import { MaterialButton } from \"../../components/MaterialUI\";\n// import PriceDetails from \"../../components/PriceDetails\";\n// export default function CartPage(props) {\n// \tconst cart = useSelector((state) => state.cart);\n// \tconst auth = useSelector((state) => state.auth);\n// \tconst dispatch = useDispatch();\n// \t// const cartItems = cart.cartItems;\n// \tconst [cartItems, setCartItems] = useState(cart.cartItems);\n// \tuseEffect(() => {\n// \t\tsetCartItems(cart.cartItems);\n// \t}, [cart.cartItems]);\n// \tuseEffect(() => {\n// \t\tif (auth.authenticate) {\n// \t\t\tdispatch(getCartItems());\n// \t\t}\n// \t}, [auth.authenticate]);\n// \tconst onQuantityIncrement = (_id, qty) => {\n// \t\tconst { name, price, img } = cartItems[_id];\n// \t\tdispatch(addToCart({ _id, name, price, img }, 1));\n// \t};\n// \tconst onQuantityDecrement = (_id, qty) => {\n// \t\tconst { name, price, img } = cartItems[_id];\n// \t\tdispatch(addToCart({ _id, name, price, img }, -1));\n// \t};\n// \tif (props.onlyCartItems) {\n// \t\treturn (\n// \t\t\t<>\n// \t\t\t\t{\" \"}\n// \t\t\t\t{Object.keys(cartItems).map((key, index) => (\n// \t\t\t\t\t<CartItem\n// \t\t\t\t\t\tkey={index}\n// \t\t\t\t\t\tcartItem={cartItems[key]}\n// \t\t\t\t\t\tonQuantityInc={onQuantityIncrement}\n// \t\t\t\t\t\tonQuantityDec={onQuantityDecrement}\n// \t\t\t\t\t/>\n// \t\t\t\t))}\n// \t\t\t</>\n// \t\t);\n// \t}\n// \treturn (\n// \t\t<Layout>\n// \t\t\t<div className='cartContainer' style={{ alignItems: \"flex-start\" }}>\n// \t\t\t\t<Card\n// \t\t\t\t\tstyle={{ width: \"calc(100%-400px)\", overFlow: \"hidden\" }}\n// \t\t\t\t\theaderLeft={\"My Cart\"}\n// \t\t\t\t\theaderRight={\"Deliver to\"}>\n// \t\t\t\t\t{Object.keys(cartItems).map((key, index) => (\n// \t\t\t\t\t\t<CartItem\n// \t\t\t\t\t\t\tkey={index}\n// \t\t\t\t\t\t\tcartItem={cartItems[key]}\n// \t\t\t\t\t\t\tonQuantityInc={onQuantityIncrement}\n// \t\t\t\t\t\t\tonQuantityDec={onQuantityDecrement}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t))}\n// \t\t\t\t\t<div\n// \t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\twidth: \"100%\",\n// \t\t\t\t\t\t\tdisplay: \"flex\",\n// \t\t\t\t\t\t\tbackground: \"#ffffff\",\n// \t\t\t\t\t\t\tjustifyContent: \"flex-end\",\n// \t\t\t\t\t\t\tboxShadow: \"0 0 10px 10px #eee\",\n// \t\t\t\t\t\t\tpadding: \"10px 0\",\n// \t\t\t\t\t\t\tboxSizing: \"border-box\",\n// \t\t\t\t\t\t}}>\n// \t\t\t\t\t\t<div style={{ width: \"250px\" }}>\n// \t\t\t\t\t\t\t<MaterialButton\n// \t\t\t\t\t\t\t\ttitle='PLACE ORDER'\n// \t\t\t\t\t\t\t\tonClick={() => props.history.push(`/checkout`)}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</Card>\n// \t\t\t\t<PriceDetails\n// \t\t\t\t\ttotalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n// \t\t\t\t\t\treturn qty + cart.cartItems[key].qty;\n// \t\t\t\t\t}, 0)}\n// \t\t\t\t\ttotalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n// \t\t\t\t\t\tconst { price, qty } = cart.cartItems[key];\n// \t\t\t\t\t\treturn totalPrice + price * qty;\n// \t\t\t\t\t}, 0)}></PriceDetails>\n// \t\t\t</div>\n// \t\t</Layout>\n// \t);\n// }","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/CartPage/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../../components/Layout\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import {\n// \taddToCart,\n// \tdecreaseCart,\n// \tgetCartItems,\n// } from \"../../actions/cart.action\";\n// import Card from \"../../components/UI/Card\";\n// import CartItem from \"./CartItem\";\n// import \"./style.css\";\n// import CartItem2 from \"./CartItem/index2\";\n// import { MaterialButton } from \"../../components/MaterialUI\";\n// import PriceDetails from \"../../components/PriceDetails\";\n\n// export default function CartPage(props) {\n// \tconst cart = useSelector((state) => state.cart);\n// \tconst auth = useSelector((state) => state.auth);\n// \tconst dispatch = useDispatch();\n// \t// const cartItems = cart.cartItems;\n// \tconst [cartItems, setCartItems] = useState(cart.cartItems);\n\n// \tuseEffect(() => {\n// \t\tsetCartItems(cart.cartItems);\n// \t}, [cart.cartItems]);\n\n// \tuseEffect(() => {\n// \t\tif (auth.authenticate) {\n// \t\t\tdispatch(getCartItems());\n// \t\t}\n// \t}, [auth.authenticate]);\n\n// \tconst onQuantityIncrement = (_id, qty) => {\n// \t\tconst { name, price, img } = cartItems[_id];\n\n// \t\tdispatch(addToCart({ _id, name, price, img }, 1));\n// \t};\n\n// \tconst onQuantityDecrement = (_id, qty) => {\n// \t\tconst { name, price, img } = cartItems[_id];\n\n// \t\tdispatch(addToCart({ _id, name, price, img }, -1));\n// \t};\n// \tif (props.onlyCartItems) {\n// \t\treturn (\n// \t\t\t<>\n// \t\t\t\t{\" \"}\n// \t\t\t\t{Object.keys(cartItems).map((key, index) => (\n// \t\t\t\t\t<CartItem\n// \t\t\t\t\t\tkey={index}\n// \t\t\t\t\t\tcartItem={cartItems[key]}\n// \t\t\t\t\t\tonQuantityInc={onQuantityIncrement}\n// \t\t\t\t\t\tonQuantityDec={onQuantityDecrement}\n// \t\t\t\t\t/>\n// \t\t\t\t))}\n// \t\t\t</>\n// \t\t);\n// \t}\n\n// \treturn (\n// \t\t<Layout>\n// \t\t\t<div className='cartContainer' style={{ alignItems: \"flex-start\" }}>\n// \t\t\t\t<Card\n// \t\t\t\t\tstyle={{ width: \"calc(100%-400px)\", overFlow: \"hidden\" }}\n// \t\t\t\t\theaderLeft={\"My Cart\"}\n// \t\t\t\t\theaderRight={\"Deliver to\"}>\n// \t\t\t\t\t{Object.keys(cartItems).map((key, index) => (\n// \t\t\t\t\t\t<CartItem\n// \t\t\t\t\t\t\tkey={index}\n// \t\t\t\t\t\t\tcartItem={cartItems[key]}\n// \t\t\t\t\t\t\tonQuantityInc={onQuantityIncrement}\n// \t\t\t\t\t\t\tonQuantityDec={onQuantityDecrement}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t))}\n\n// \t\t\t\t\t<div\n// \t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\twidth: \"100%\",\n// \t\t\t\t\t\t\tdisplay: \"flex\",\n// \t\t\t\t\t\t\tbackground: \"#ffffff\",\n// \t\t\t\t\t\t\tjustifyContent: \"flex-end\",\n// \t\t\t\t\t\t\tboxShadow: \"0 0 10px 10px #eee\",\n// \t\t\t\t\t\t\tpadding: \"10px 0\",\n// \t\t\t\t\t\t\tboxSizing: \"border-box\",\n// \t\t\t\t\t\t}}>\n// \t\t\t\t\t\t<div style={{ width: \"250px\" }}>\n// \t\t\t\t\t\t\t<MaterialButton\n// \t\t\t\t\t\t\t\ttitle='PLACE ORDER'\n// \t\t\t\t\t\t\t\tonClick={() => props.history.push(`/checkout`)}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</Card>\n\n// \t\t\t\t<PriceDetails\n// \t\t\t\t\ttotalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n// \t\t\t\t\t\treturn qty + cart.cartItems[key].qty;\n// \t\t\t\t\t}, 0)}\n// \t\t\t\t\ttotalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n// \t\t\t\t\t\tconst { price, qty } = cart.cartItems[key];\n// \t\t\t\t\t\treturn totalPrice + price * qty;\n// \t\t\t\t\t}, 0)}></PriceDetails>\n// \t\t\t</div>\n// \t\t</Layout>\n// \t);\n// }\n"]},"metadata":{},"sourceType":"module"}