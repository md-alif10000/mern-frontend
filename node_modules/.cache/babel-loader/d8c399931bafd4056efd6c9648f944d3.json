{"ast":null,"code":"var _jsxFileName = \"/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/CheckoutPage/option2/AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { addAddress } from '../../../actions/user.action';\nimport './style.css';\nimport Swal from 'sweetalert2';\nimport { Button, SwipeableDrawer } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddressForm(props) {\n  _s();\n\n  const {\n    initialData,\n    onCancel\n  } = props;\n  const [name, setName] = useState(initialData ? initialData.name : \"\");\n  const [mobileNumber, setMobileNumber] = useState(initialData ? initialData.mobileNumber : \"\");\n  const [zipCode, setZipCode] = useState(initialData ? initialData.pinCode : \"\");\n  const [locality, setLocality] = useState(initialData ? initialData.locality : \"\");\n  const [address, setAddress] = useState(initialData ? initialData.address : \"\");\n  const [cityDistrict, setCityDistrict] = useState(initialData ? initialData.cityDistrictTown : \"\");\n  const [state, setState] = useState(initialData ? initialData.state : \"\");\n  const [landmark, setLandmark] = useState(initialData ? initialData.landmark : \"\");\n  const [alternatePhone, setAlternatePhone] = useState(initialData ? initialData.alternatePhone : \"\");\n  const [addressType, setAddressType] = useState(initialData ? initialData.addressType : \"\");\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [submitFlag, setSubmitFlag] = useState(false);\n  const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n  const onAddressSubmit = e => {\n    const payload = {\n      address: {\n        name,\n        mobileNumber,\n        zipCode,\n        address,\n        cityDistrict,\n        alternatePhone\n      }\n    };\n    console.log(payload);\n\n    if (id) {\n      payload.address._id = id;\n    }\n\n    if (name || mobileNumber || zipCode || address || cityDistrict == '') {\n      return Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Something went wrong!\"\n      });\n    }\n\n    dispatch(addAddress(payload));\n    setSubmitFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      style: {\n        fontSize: \"1.8rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Shipping address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"firstName\",\n            name: \"Full Name\",\n            label: \"Full name\",\n            onChange: e => setName(e.target.value),\n            fullWidth: true,\n            autoComplete: \"given-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"address1\",\n            name: \"address1\",\n            label: \"Address line 1\",\n            fullWidth: true,\n            onChange: e => setAddress(e.target.value),\n            autoComplete: \"shipping address-line1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address2\",\n            name: \"address2\",\n            label: \"Address line 2 (optiona)\",\n            fullWidth: true,\n            autoComplete: \"shipping address-line2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"mobileNumber\",\n            name: \"mobileNumber\",\n            label: \"Mobile Number\",\n            onChange: e => setMobileNumber(e.target.value),\n            fullWidth: true,\n            autoComplete: \"mobileNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"state\",\n            name: \"state\",\n            label: \"City/District\",\n            onChange: e => setCityDistrict(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"zip\",\n            name: \"zip\",\n            label: \"Zip / Postal code\",\n            onChange: e => setZipCode(e.target.value),\n            fullWidth: true,\n            autoComplete: \"shipping postal-code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"alternatePhone\",\n            name: \"alternatePhone\",\n            label: \"Secondery Phone\",\n            onChange: e => setAlternatePhone(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"secondary\",\n              name: \"saveAddress\",\n              value: \"yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 9\n            }, this),\n            label: \"Use this address for payment details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        style: {\n          backgroundColor: \"yellow\",\n          color: \"gray\"\n        },\n        onClick: onAddressSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Submit Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AddressForm, \"a0+1RifjxWixauZgszgaxzzMhlQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/CheckoutPage/option2/AddressForm.js"],"names":["React","useState","useSelector","useDispatch","Grid","Typography","TextField","FormControlLabel","Checkbox","addAddress","Swal","Button","SwipeableDrawer","AddressForm","props","initialData","onCancel","name","setName","mobileNumber","setMobileNumber","zipCode","setZipCode","pinCode","locality","setLocality","address","setAddress","cityDistrict","setCityDistrict","cityDistrictTown","state","setState","landmark","setLandmark","alternatePhone","setAlternatePhone","addressType","setAddressType","dispatch","user","submitFlag","setSubmitFlag","id","setId","_id","onAddressSubmit","e","payload","console","log","fire","icon","title","text","fontSize","target","value","backgroundColor","color"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {addAddress} from '../../../actions/user.action'\nimport './style.css'\nimport Swal from 'sweetalert2'\nimport { Button, SwipeableDrawer } from \"@material-ui/core\";\n\nexport default function AddressForm(props) {\n\n\n\tconst { initialData, onCancel } = props;\n\tconst [name, setName] = useState(initialData ? initialData.name : \"\");\n\tconst [mobileNumber, setMobileNumber] = useState(\n\t\tinitialData ? initialData.mobileNumber : \"\"\n\t);\n\tconst [zipCode, setZipCode] = useState(\n\t\tinitialData ? initialData.pinCode : \"\"\n\t);\n\tconst [locality, setLocality] = useState(\n\t\tinitialData ? initialData.locality : \"\"\n\t);\n\tconst [address, setAddress] = useState(\n\t\tinitialData ? initialData.address : \"\"\n\t);\n\tconst [cityDistrict, setCityDistrict] = useState(\n\t\tinitialData ? initialData.cityDistrictTown : \"\"\n\t);\n\tconst [state, setState] = useState(initialData ? initialData.state : \"\");\n\tconst [landmark, setLandmark] = useState(\n\t\tinitialData ? initialData.landmark : \"\"\n\t);\n\tconst [alternatePhone, setAlternatePhone] = useState(\n\t\tinitialData ? initialData.alternatePhone : \"\"\n\t);\n\tconst [addressType, setAddressType] = useState(\n\t\tinitialData ? initialData.addressType : \"\"\n\t);\n\tconst dispatch = useDispatch();\n\tconst user = useSelector((state) => state.user);\n\n\tconst [submitFlag, setSubmitFlag] = useState(false);\n\tconst [id, setId] = useState(initialData ? initialData._id : \"\");\n\n\n\n\n\n\n\n\t\tconst onAddressSubmit = (e) => {\n\t\t\tconst payload = {\n\t\t\t\taddress: {\n\t\t\t\t\tname,\n\t\t\t\t\tmobileNumber,\n\t\t\t\t\tzipCode,\n\t\t\t\t\taddress,\n\t\t\t\t\tcityDistrict,\n\t\t\t\t\talternatePhone,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconsole.log(payload);\n\t\t\tif (id) {\n\t\t\t\tpayload.address._id = id;\n\t\t\t}\n\t\t\tif (name || mobileNumber || zipCode || address || cityDistrict == ''){\n\t\t\t\treturn Swal.fire({\n\t\t\t\t\ticon: \"error\",\n\t\t\t\t\ttitle: \"Oops...\",\n\t\t\t\t\ttext: \"Something went wrong!\",\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t}\n\t\t\t\tdispatch(addAddress(payload));\n\t\t\tsetSubmitFlag(true);\n\t\t};\n\n\n\n\n\n\n\n\n\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className='mainContainer' style={{ fontSize: \"1.8rem\" }}>\n\t\t\t\t<Typography variant='h6' gutterBottom>\n\t\t\t\t\t<h4>Shipping address</h4>\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid='firstName'\n\t\t\t\t\t\t\tname='Full Name'\n\t\t\t\t\t\t\tlabel='Full name'\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tautoComplete='given-name'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{/* <Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid='lastName'\n\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\tlabel='Last name'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tautoComplete='family-name'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid> */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid='address1'\n\t\t\t\t\t\t\tname='address1'\n\t\t\t\t\t\t\tlabel='Address line 1'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n\t\t\t\t\t\t\tautoComplete='shipping address-line1'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='address2'\n\t\t\t\t\t\t\tname='address2'\n\t\t\t\t\t\t\tlabel='Address line 2 (optiona)'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tautoComplete='shipping address-line2'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid='mobileNumber'\n\t\t\t\t\t\t\tname='mobileNumber'\n\t\t\t\t\t\t\tlabel='Mobile Number'\n\t\t\t\t\t\t\tonChange={(e) => setMobileNumber(e.target.value)}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tautoComplete='mobileNumber'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='state'\n\t\t\t\t\t\t\tname='state'\n\t\t\t\t\t\t\tlabel='City/District'\n\t\t\t\t\t\t\tonChange={(e) => setCityDistrict(e.target.value)}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid='zip'\n\t\t\t\t\t\t\tname='zip'\n\t\t\t\t\t\t\tlabel='Zip / Postal code'\n\t\t\t\t\t\t\tonChange={(e) => setZipCode(e.target.value)}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tautoComplete='shipping postal-code'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tid='alternatePhone'\n\t\t\t\t\t\t\tname='alternatePhone'\n\t\t\t\t\t\t\tlabel='Secondery Phone'\n\t\t\t\t\t\t\tonChange={(e) => setAlternatePhone(e.target.value)}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox color='secondary' name='saveAddress' value='yes' />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel='Use this address for payment details'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Button\n\t\t\t\t\tfullWidth\n\t\t\t\t\tstyle={{ backgroundColor: \"yellow\", color: \"gray\" }}\n\t\t\t\t\tonClick={onAddressSubmit}>\n\t\t\t\t\t<h5>Submit Address</h5>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}