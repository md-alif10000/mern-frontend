{"ast":null,"code":"var _jsxFileName = \"/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/HomePage/gridCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { getAllCategory } from '../../actions/category.action';\nimport item from \"./item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 80,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\nexport default function GridCategory() {\n  _s();\n\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllCategory());\n  }, []);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.parentId ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/${category.slug}?cid=${category._id}&type=${category.type}`,\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), category.children ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderCategories(category.children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this) : null]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this));\n    }\n\n    return myCategories;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: spacing,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(GridCategory, \"n9NUFRe7iB+Q38HuHcLqyuooM3Q=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = GridCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridCategory\");","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/HomePage/gridCategory.js"],"names":["React","useState","useEffect","useSelector","useDispatch","makeStyles","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","getAllCategory","item","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","GridCategory","setSpacing","classes","handleChange","event","Number","target","value","category","state","dispatch","renderCategories","categories","myCategories","push","parentId","slug","_id","type","name","children"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport{useSelector,useDispatch} from 'react-redux'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {getAllCategory} from '../../actions/category.action'\nimport item from \"./item\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tpaper: {\n\t\theight: 80,\n\t\twidth: 100,\n\t},\n\tcontrol: {\n\t\tpadding: theme.spacing(2),\n\t},\n}));\n\nexport default function GridCategory() {\n\tconst [spacing, setSpacing] = React.useState(2);\n\tconst classes = useStyles();\n\n\tconst handleChange = (event) => {\n\t\tsetSpacing(Number(event.target.value));\n\n\t};\n\n\n    \tconst category = useSelector((state) => state.category);\n\t\t\tconst dispatch = useDispatch();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tdispatch(getAllCategory());\n\t\t\t}, []);\n\n\t\t\tconst renderCategories = (categories) => {\n\t\t\t\tlet myCategories = [];\n\n\t\t\t\tfor (let category of categories) {\n\t\t\t\t\tmyCategories.push(\n\t\t\t\t\t\t<li key={category.name}>\n\t\t\t\t\t\t\t{category.parentId ? (\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={`/${category.slug}?cid=${category._id}&type=${category.type}`}>\n\t\t\t\t\t\t\t\t\t{category.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span>{category.name}</span>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{category.children ? (\n\t\t\t\t\t\t\t\t<ul>{renderCategories(category.children)}</ul>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn myCategories;\n\t\t\t};\n\n\treturn (\n\t\t<Grid container className={classes.root} spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container justify='center' spacing={spacing}>\n\t\t\t\t\n\t\t\t\t\t\t<Grid key={value} item>\n\t\t\t\t\t\t\t<Paper className={classes.paper} />\n                            <p>{item.name}</p>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\n\t\t\t\t</Grid>\n\t\t \t</Grid>\n\t\t\n\t\t </Grid>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}