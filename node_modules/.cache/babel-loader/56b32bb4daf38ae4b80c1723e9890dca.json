{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null,\n  subCategories: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  if (parentId == undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      children: []\n    }];\n  }\n\n  for (let cat of categories) {\n    if (cat._id == parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log(\"updated categories\", updatedCategories);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n\n    case categoryConstants.GET_SUB_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.GET_SUB_CATEGORY_SUCCESS:\n      state = { ...state,\n        loading: false,\n        subCategories: action.payload.subCategories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...state,\n        lo\n      };\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","subCategories","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","children","cat","push","length","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE","GET_SUB_CATEGORY_REQUEST","GET_SUB_CATEGORY_SUCCESS","lo"],"mappings":"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","sourcesContent":["import { categoryConstants } from \"../actions/constants\";\n\nconst initState = {\n\tcategories: [],\n\tloading: false,\n\terror: null,\n\tsubCategories: null,\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n\tlet myCategories = [];\n\tif (parentId == undefined) {\n\t\treturn [\n\t\t\t...categories,\n\t\t\t{\n\t\t\t\t_id: category._id,\n\t\t\t\tname: category.name,\n\t\t\t\tslug: category.slug,\n\t\t\t\tchildren: [],\n\t\t\t},\n\t\t];\n\t}\n\n\tfor (let cat of categories) {\n\t\tif (cat._id == parentId) {\n\t\t\tmyCategories.push({\n\t\t\t\t...cat,\n\t\t\t\tchildren:\n\t\t\t\t\tcat.children && cat.children.length > 0\n\t\t\t\t\t\t? buildNewCategories(\n\t\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t...cat.children,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t_id: category._id,\n\t\t\t\t\t\t\t\t\t\tname: category.name,\n\t\t\t\t\t\t\t\t\t\tslug: category.slug,\n\t\t\t\t\t\t\t\t\t\tparentId: category.parentId,\n\t\t\t\t\t\t\t\t\t\tchildren: category.children,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcategory\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: [],\n\t\t\t});\n\t\t} else {\n\t\t\tmyCategories.push({\n\t\t\t\t...cat,\n\t\t\t\tchildren: cat.children\n\t\t\t\t\t? buildNewCategories(parentId, cat.children, category)\n\t\t\t\t\t: [],\n\t\t\t});\n\t\t}\n\t}\n\treturn myCategories;\n};\n\nexport default (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tcategories: action.payload.categories,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n\t\t\tconst category = action.payload.category;\n\n\t\t\tconst updatedCategories = buildNewCategories(\n\t\t\t\tcategory.parentId,\n\t\t\t\tstate.categories,\n\t\t\t\tcategory\n\t\t\t);\n\n\t\t\tconsole.log(\"updated categories\", updatedCategories);\n\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tcategories: updatedCategories,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n\t\t\tstate = {\n\t\t\t\t...initState,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.GET_SUB_CATEGORY_REQUEST:\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase categoryConstants.GET_SUB_CATEGORY_SUCCESS:\n\t\t\tstate = {\n\t\t\t\t...state,\n                loading:false,\n\t\t\t\tsubCategories: action.payload.subCategories,\n\t\t\t};\n\t\t\tbreak;\n            case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n                state={\n                    ...state,\n                    lo\n                }\n\t}\n\treturn state;\n};\n"]},"metadata":{},"sourceType":"module"}