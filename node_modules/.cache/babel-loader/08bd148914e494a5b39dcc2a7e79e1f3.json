{"ast":null,"code":"import axios from '../helpers/axios.js';\nimport { productConstants } from './constants';\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axios.get(`/products/${slug}`);\n    consl;\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    } else {// dispatch({\n      //     type\n      // })\n    }\n  };\n};\nexport const getProductPage = payload => {\n  return async dispatch => {\n    try {\n      const {\n        params\n      } = payload;\n      const {\n        cid,\n        type\n      } = params;\n      console.log(cid);\n      const res = await axios.get(`/page/${cid}/${type}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_PAGE_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          page\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: {\n            page\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/actions/product.action.js"],"names":["axios","productConstants","getProductsBySlug","slug","dispatch","res","get","consl","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductPage","params","cid","console","log","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","error","GET_PRODUCT_PAGE_FAILURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAGA,OAAO,MAAMC,iBAAiB,GAAEC,IAAD,IAAQ;AAEnC,SAAO,MAAMC,QAAN,IAAgB;AACnB,UAAMC,GAAG,GAAC,MAAML,KAAK,CAACM,GAAN,CAAW,aAAYH,IAAK,EAA5B,CAAhB;AACAI,IAAAA,KAAK;;AACL,QAAGF,GAAG,CAACG,MAAJ,KAAa,GAAhB,EAAoB;AAChBJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAACR,gBAAgB,CAACS,oBADjB;AAELC,QAAAA,OAAO,EAACN,GAAG,CAACO;AAFP,OAAD,CAAR;AAKH,KAND,MAMK,CACD;AACA;AACA;AACH;AACJ,GAdD;AAeH,CAjBM;AAwBP,OAAO,MAAMC,cAAc,GAAEF,OAAD,IAAW;AAEnC,SAAO,MAAMP,QAAN,IAAgB;AAEnB,QAAG;AACC,YAAM;AAACU,QAAAA;AAAD,UAASH,OAAf;AACA,YAAM;AAACI,QAAAA,GAAD;AAAKN,QAAAA;AAAL,UAAWK,MAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMV,GAAG,GAAC,MAAML,KAAK,CAACM,GAAN,CAAW,SAAQS,GAAI,IAAGN,IAAK,EAA/B,CAAhB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACAD,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAACR,gBAAgB,CAACiB;AAAvB,OAAD,CAAR;;AACA,UAAGb,GAAG,CAACG,MAAJ,KAAa,GAAhB,EAAoB;AAChB,cAAM;AAACW,UAAAA;AAAD,YAAOd,GAAG,CAACO,IAAjB;AACAR,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAACR,gBAAgB,CAACmB,wBADjB;AAELT,UAAAA,OAAO,EAAC;AAACQ,YAAAA;AAAD;AAFH,SAAD,CAAR;AAMH,OARD,MAQK;AACD,cAAM;AAACE,UAAAA;AAAD,YAAQhB,GAAG,CAACO,IAAlB;AACAR,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAACR,gBAAgB,CAACqB,wBADjB;AAELX,UAAAA,OAAO,EAAC;AAACU,YAAAA;AAAD;AAFH,SAAD,CAAR;AAIH;AAEJ,KAvBD,CAuBC,OAAMA,KAAN,EAAY;AAETL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AAEH;AACJ,GA9BD;AA+BH,CAjCM","sourcesContent":["import axios from '../helpers/axios.js'\nimport { productConstants } from './constants'\n\n\nexport const getProductsBySlug=(slug)=>{\n    \n    return async dispatch=>{\n        const res=await axios.get(`/products/${slug}`)\n        consl\n        if(res.status===200){\n            dispatch({\n                type:productConstants.GET_PRODUCTS_BY_SLUG,\n                payload:res.data \n            })\n\n        }else{\n            // dispatch({\n            //     type\n            // })\n        }       \n    }\n}\n\n\n\n\n\n\nexport const getProductPage=(payload)=>{\n    \n    return async dispatch=>{\n\n        try{\n            const {params}=payload\n            const {cid,type}=params\n            console.log(cid)\n            const res=await axios.get(`/page/${cid}/${type}`)\n            console.log(res)\n            dispatch({type:productConstants.GET_PRODUCT_PAGE_REQUEST})\n            if(res.status===200){\n                const {page}=res.data\n                dispatch({\n                    type:productConstants.GET_PRODUCT_PAGE_SUCCESS,\n                    payload:{page}\n                })\n       \n    \n            }else{\n                const {error}=res.data\n                dispatch({\n                    type:productConstants.GET_PRODUCT_PAGE_FAILURE,\n                    payload:{error}\n                })\n            }  \n\n        }catch(error){\n\n            console.log(error)\n   \n        }     \n    }\n}"]},"metadata":{},"sourceType":"module"}