{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Stepper from \"@material-ui/core/Stepper\";\n// import Step from \"@material-ui/core/Step\";\n// import StepLabel from \"@material-ui/core/StepLabel\";\n// import Link from \"@material-ui/core/Link\";\n// import Review from \"./Review\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Typography from \"@material-ui/core/Typography\";\n// import TextField from \"@material-ui/core/TextField\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Radio from \"@material-ui/core/Radio\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import { addAddress, getAddress, addOrder } from \"../../../actions/user.action\";\n// import { getCartItems } from \"../../../actions/cart.action\";\n// import \"./style.css\";\n// import Swal from \"sweetalert2\";\n// import { Button, SwipeableDrawer } from \"@material-ui/core\";\n// import \"./style.css\";\n// function Copyright() {\n// \treturn (\n// \t\t<Typography variant='body2' color='textSecondary' align='center'>\n// \t\t\t{\"Copyright Â© \"}\n// \t\t\t<Link color='inherit' href='https://material-ui.com/'>\n// \t\t\t\tYour Website\n// \t\t\t</Link>{\" \"}\n// \t\t\t{new Date().getFullYear()}\n// \t\t\t{\".\"}\n// \t\t</Typography>\n// \t);\n// }\n// const useStyles = makeStyles((theme) => ({\n// \tappBar: {\n// \t\tposition: \"relative\",\n// \t},\n// \tlayout: {\n// \t\twidth: \"auto\",\n// \t\tfontSize: \"1.8 rem\",\n// \t\tmarginLeft: theme.spacing(2),\n// \t\tmarginRight: theme.spacing(2),\n// \t\t[theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n// \t\t\twidth: 600,\n// \t\t\tmarginLeft: \"auto\",\n// \t\t\tmarginRight: \"auto\",\n// \t\t},\n// \t},\n// \tpaper: {\n// \t\tmarginTop: theme.spacing(3),\n// \t\tmarginBottom: theme.spacing(3),\n// \t\tpadding: theme.spacing(2),\n// \t\t[theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n// \t\t\tmarginTop: theme.spacing(6),\n// \t\t\tmarginBottom: theme.spacing(6),\n// \t\t\tpadding: theme.spacing(3),\n// \t\t},\n// \t},\n// \tstepper: {\n// \t\tpadding: theme.spacing(3, 0, 5),\n// \t},\n// \tbuttons: {\n// \t\tdisplay: \"flex\",\n// \t\tjustifyContent: \"flex-end\",\n// \t},\n// \tbutton: {\n// \t\tmarginTop: theme.spacing(3),\n// \t\tmarginLeft: theme.spacing(1),\n// \t},\n// }));\n// export default function Checkout(props) {\n// \t\tconst user = useSelector((state) => state.user);\n// \tconst selectedAddress = user.address.slice(user.address.length - 1)[0];\n// \tconst steps = [\"Shipping address\", \"Review your order\", \" Payment details\"];\n// \tconst classes = useStyles();\n// \tconst [activeStep, setActiveStep] = React.useState(0);\n// \tconst dispatch = useDispatch();\n// \tconst auth = useSelector((state) => state.auth);\n// \tconst cart = useSelector((state) => state.cart);\n// \tconst handleNext = () => {\n// \t\tsetActiveStep(activeStep + 1);\n// \t};\n// \tconst handleBack = () => {\n// \t\tsetActiveStep(activeStep - 1);\n// \t};\n// \t//Address from Hooks............\n// \t//Order confirm hooksssss............\n// \tconst [confirmOrder, setConfirmOrder] = useState(\"\");\n// \tconst onConfirmOrder = () => {\n// \t\tconst totalAmount = Object.keys(cart.cartItems).reduce(\n// \t\t\t(totalPrice, key) => {\n// \t\t\t\tconst { price, qty } = cart.cartItems[key];\n// \t\t\t\treturn totalPrice + price * qty;\n// \t\t\t},\n// \t\t\t0\n// \t\t);\n// \t\tconst items = Object.keys(cart.cartItems).map((key) => ({\n// \t\t\tproductId: key,\n// \t\t\tpayablePrice: cart.cartItems[key].price,\n// \t\t\tpurchasedQty: cart.cartItems[key].qty,\n// \t\t}));\n// \t\tconst payload = {\n// \t\t\taddressId: selectedAddress._id,\n// \t\t\ttotalAmount,\n// \t\t\titems,\n// \t\t\tpaymentStatus: \"pending\",\n// \t\t\tpaymentType: \"cod\",\n// \t\t};\n// \t\tconsole.log(payload);\n// \t\tdispatch(addOrder(payload));\n// \t\tsetConfirmOrder(true);\n// \t};\n// \t// useEffect(() => {\n// \t// \tdispatch(getAddress());\n// \t// }, [user.address]);\n// \tuseEffect(() => {\n// \t\tauth.authenticate && dispatch(getAddress());\n// \t\tauth.authenticate && dispatch(getCartItems());\n// \t}, [auth.authenticate]);\n// \tfunction getStepContent(activeStep) {\n// \t\tswitch (activeStep) {\n// \t\t\tcase 0:\n// \t\t\t\treturn <AddressForm />;\n// \t\t\tcase 1:\n// \t\t\t\treturn <Review />;\n// \t\t\tcase 2:\n// \t\t\t\treturn <PaymentForm />;\n// \t\t\tdefault:\n// \t\t\t\tthrow new Error(\"Unknown step\");\n// \t\t}\n// \t}\n// \t//Address form............\n// \tfunction AddressForm(props) {\n// \t\tconst previousAddress = user.address;\n// \t\tconst oldAddress = user.address.slice(user.address.length - 1)[0];\n// \t\tconsole.log(oldAddress);\n// \t\t// useEffect(() => {\n// \t\t// \tdispatch(getAddress());\n// \t\t// }, [user.address]);\n// \t\tconst [name, setName] = useState(oldAddress ? oldAddress.name : \"\");\n// \t\tconst [mobileNumber, setMobileNumber] = useState(\n// \t\t\toldAddress ? oldAddress.mobileNumber : \"\"\n// \t\t);\n// \t\tconst [zipCode, setZipCode] = useState(\n// \t\t\toldAddress ? oldAddress.zipCode : \"\"\n// \t\t);\n// \t\tconst [address, setAddress] = useState(\n// \t\t\toldAddress ? oldAddress.address : \"\"\n// \t\t);\n// \t\tconst [cityDistrict, setCityDistrict] = useState(\n// \t\t\toldAddress ? oldAddress.cityDistrict : \"\"\n// \t\t);\n// \t\tconst [alternatePhone, setAlternatePhone] = useState(\n// \t\t\toldAddress ? oldAddress.alternatePhone : \"\"\n// \t\t);\n// \t\tconsole.log(oldAddress);\n// \t\tconst [id, setId] = useState(oldAddress ? oldAddress._id : \"\");\n// \t\tconsole.log(name);\n// \t\tconst onAddressSubmit = (e) => {\n// \t\t\tconst payload = {\n// \t\t\t\taddress: {\n// \t\t\t\t\tname,\n// \t\t\t\t\tmobileNumber,\n// \t\t\t\t\tzipCode,\n// \t\t\t\t\taddress,\n// \t\t\t\t\tcityDistrict,\n// \t\t\t\t\talternatePhone,\n// \t\t\t\t},\n// \t\t\t};\n// \t\t\tconsole.log(payload);\n// \t\t\tif (id) {\n// \t\t\t\tpayload.address._id = id;\n// \t\t\t}\n// \t\t\tif (name==''){return Swal.fire({\n// \t\t\t\t\ticon: \"error\",\n// \t\t\t\t\ttitle: \"Oops...\",\n// \t\t\t\t\ttext: \"Name is required...!\", })}\n// \t\t\tif(address==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"Address is required....!\",})}\n// \t\t\tif(mobileNumber==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"Mobile number is required..!\",})}\n// \t\t\tif(zipCode==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"Zipcode is required..!\",})}\n// \t\t\tif(cityDistrict==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"City/district is required..!\",})}\n// \t\t\tdispatch(addAddress(payload));\n// \t\t\tsetActiveStep(activeStep + 1);\n// \t\t};\n// \t\treturn (\n// \t\t\t<React.Fragment>\n// \t\t\t\t<div className='mainContainer' style={{ fontSize: \"1.8rem\" }}>\n// \t\t\t\t\t<Typography variant='h6' gutterBottom>\n// \t\t\t\t\t\t<h4>Shipping address</h4>\n// \t\t\t\t\t</Typography>\n// \t\t\t\t\t<div class='content'>\n// \t\t\t\t\t\t<form action='#'>\n// \t\t\t\t\t\t\t<div class='user-details'>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Full Name</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your name'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={name}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Full Address</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your address'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={address}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>City/District</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your email'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={cityDistrict}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setCityDistrict(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Zip Code</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your number'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={zipCode}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setZipCode(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Phone Number</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tvalue={mobileNumber}\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Phone Number'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setMobileNumber(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Secondary Phone (optional)</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tvalue={alternatePhone}\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter Secondary Phone'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setAlternatePhone(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t{/* <div class='gender-details'>\n// \t\t\t\t\t\t\t\t<input type='radio' name='gender' id='dot-1' />\n// \t\t\t\t\t\t\t\t<input type='radio' name='gender' id='dot-2' />\n// \t\t\t\t\t\t\t\t<input type='radio' name='gender' id='dot-3' />\n// \t\t\t\t\t\t\t\t<span class='gender-title'>Gender</span>\n// \t\t\t\t\t\t\t\t<div class='category'>\n// \t\t\t\t\t\t\t\t\t<label for='dot-1'>\n// \t\t\t\t\t\t\t\t\t\t<span class='dot one'></span>\n// \t\t\t\t\t\t\t\t\t\t<span class='gender'>Male</span>\n// \t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t\t<label for='dot-2'>\n// \t\t\t\t\t\t\t\t\t\t<span class='dot two'></span>\n// \t\t\t\t\t\t\t\t\t\t<span class='gender'>Female</span>\n// \t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t\t<label for='dot-3'>\n// \t\t\t\t\t\t\t\t\t\t<span class='dot three'></span>\n// \t\t\t\t\t\t\t\t\t\t<span class='gender'>Prefer not to say</span>\n// \t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t\t<div class='button'>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\ttype='submit'\n// \t\t\t\t\t\t\t\t\tvalue='Submit Address'\n// \t\t\t\t\t\t\t\t\tonClick={onAddressSubmit}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</form>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{/* <Button\n// \t\t\t\t\t\tfullWidth\n// \t\t\t\t\t\tstyle={{ backgroundColor: \"yellow\", color: \"gray\" }}\n// \t\t\t\t\t\t<h5>Submit Address</h5>\n// \t\t\t\t\t</Button> */}\n// \t\t\t\t</div>\n// \t\t\t</React.Fragment>\n// \t\t);\n// \t}\n// \tfunction PaymentForm() {\n// \t\tconst [paymentType, setPaymentType] = useState(\"\");\n// \t\treturn (\n// \t\t\t<React.Fragment>\n// \t\t\t\t<Typography variant='h6' gutterBottom>\n// \t\t\t\t\tPayment method\n// \t\t\t\t</Typography>\n// \t\t\t\t<Grid container spacing={3}>\n// \t\t\t\t\t<FormControl component='fieldset'>\n// \t\t\t\t\t\t{/* <FormLabel component='legend'>Payment Type</FormLabel> */}\n// \t\t\t\t\t\t<RadioGroup\n// \t\t\t\t\t\t\taria-label='Payment Type'\n// \t\t\t\t\t\t\tname='gender1'\n// \t\t\t\t\t\t\tvalue={paymentType}\n// \t\t\t\t\t\t\tonChange={(e) => setPaymentType(e.target.value)}>\n// \t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\tvalue='Bkash'\n// \t\t\t\t\t\t\t\tcontrol={<Radio />}\n// \t\t\t\t\t\t\t\tlabel='Bkash'\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\tvalue='ssl'\n// \t\t\t\t\t\t\t\tcontrol={<Radio />}\n// \t\t\t\t\t\t\t\tlabel='SSL Commerce'\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\tvalue='cod'\n// \t\t\t\t\t\t\t\tcontrol={<Radio />}\n// \t\t\t\t\t\t\t\tlabel='Cash On Delivery'\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</RadioGroup>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<Button\n// \t\t\t\t\t\tfullWidth\n// \t\t\t\t\t\tstyle={{ color: \"black\", backgroundColor: \"yellow\" }}\n// \t\t\t\t\t\tonClick={onConfirmOrder}>\n// \t\t\t\t\t\tConfirm Order\n// \t\t\t\t\t</Button>\n// \t\t\t\t</Grid>\n// \t\t\t</React.Fragment>\n// \t\t);\n// \t}\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t\t<div className='mainContainer'>\n// \t\t\t\t{/* <CssBaseline /> */}\n// \t\t\t\t<AppBar position='absolute' color='default' className={classes.appBar}>\n// \t\t\t\t\t<Toolbar>\n// \t\t\t\t\t\t<Typography variant='h6' color='inherit' noWrap>\n// \t\t\t\t\t\t\tCompany name\n// \t\t\t\t\t\t</Typography>\n// \t\t\t\t\t</Toolbar>\n// \t\t\t\t</AppBar>\n// \t\t\t\t<main className={classes.layout}>\n// \t\t\t\t\t<Paper className={classes.paper}>\n// \t\t\t\t\t\t<Typography component='h1' variant='h4' align='center'>\n// \t\t\t\t\t\t\t<h3>Checkout</h3>\n// \t\t\t\t\t\t</Typography>\n// \t\t\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\n// \t\t\t\t\t\t\t{steps.map((label) => (\n// \t\t\t\t\t\t\t\t<Step key={label}>\n// \t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n// \t\t\t\t\t\t\t\t</Step>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</Stepper>\n// \t\t\t\t\t\t<React.Fragment>\n// \t\t\t\t\t\t\t{activeStep === steps.length ? (\n// \t\t\t\t\t\t\t\t<React.Fragment>\n// \t\t\t\t\t\t\t\t\t<Typography variant='h5' gutterBottom>\n// \t\t\t\t\t\t\t\t\t\tThank you for your order.\n// \t\t\t\t\t\t\t\t\t</Typography>\n// \t\t\t\t\t\t\t\t\t<Typography variant='subtitle1'>\n// \t\t\t\t\t\t\t\t\t\tYour order number is #2001539. We have emailed your order\n// \t\t\t\t\t\t\t\t\t\tconfirmation, and will send you an update when your order\n// \t\t\t\t\t\t\t\t\t\thas shipped.\n// \t\t\t\t\t\t\t\t\t</Typography>\n// \t\t\t\t\t\t\t\t</React.Fragment>\n// \t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t<React.Fragment>\n// \t\t\t\t\t\t\t\t\t{getStepContent(activeStep)}\n// \t\t\t\t\t\t\t\t\t<div className={classes.buttons}>\n// \t\t\t\t\t\t\t\t\t\t{activeStep !== 0 && (\n// \t\t\t\t\t\t\t\t\t\t\t<Button onClick={handleBack} className={classes.button}>\n// \t\t\t\t\t\t\t\t\t\t\t\tBack\n// \t\t\t\t\t\t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n// \t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n// \t\t\t\t\t\t\t\t\t\t\tonClick={handleNext}\n// \t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}>\n// \t\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\n// \t\t\t\t\t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t</React.Fragment>\n// \t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t</React.Fragment>\n// \t\t\t\t\t</Paper>\n// \t\t\t\t\t<Copyright />\n// \t\t\t\t</main>\n// \t\t\t</div>\n// \t\t</React.Fragment>\n// \t);\n// }","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/containers/CheckoutPage/option2/Checkout.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Stepper from \"@material-ui/core/Stepper\";\n// import Step from \"@material-ui/core/Step\";\n// import StepLabel from \"@material-ui/core/StepLabel\";\n// import Link from \"@material-ui/core/Link\";\n// import Review from \"./Review\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Typography from \"@material-ui/core/Typography\";\n// import TextField from \"@material-ui/core/TextField\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Radio from \"@material-ui/core/Radio\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import { addAddress, getAddress, addOrder } from \"../../../actions/user.action\";\n// import { getCartItems } from \"../../../actions/cart.action\";\n// import \"./style.css\";\n// import Swal from \"sweetalert2\";\n// import { Button, SwipeableDrawer } from \"@material-ui/core\";\n// import \"./style.css\";\n\n// function Copyright() {\n// \treturn (\n// \t\t<Typography variant='body2' color='textSecondary' align='center'>\n// \t\t\t{\"Copyright Â© \"}\n// \t\t\t<Link color='inherit' href='https://material-ui.com/'>\n// \t\t\t\tYour Website\n// \t\t\t</Link>{\" \"}\n// \t\t\t{new Date().getFullYear()}\n// \t\t\t{\".\"}\n// \t\t</Typography>\n// \t);\n// }\n\n// const useStyles = makeStyles((theme) => ({\n// \tappBar: {\n// \t\tposition: \"relative\",\n// \t},\n// \tlayout: {\n// \t\twidth: \"auto\",\n// \t\tfontSize: \"1.8 rem\",\n// \t\tmarginLeft: theme.spacing(2),\n// \t\tmarginRight: theme.spacing(2),\n// \t\t[theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n// \t\t\twidth: 600,\n// \t\t\tmarginLeft: \"auto\",\n// \t\t\tmarginRight: \"auto\",\n// \t\t},\n// \t},\n// \tpaper: {\n// \t\tmarginTop: theme.spacing(3),\n// \t\tmarginBottom: theme.spacing(3),\n// \t\tpadding: theme.spacing(2),\n// \t\t[theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n// \t\t\tmarginTop: theme.spacing(6),\n// \t\t\tmarginBottom: theme.spacing(6),\n// \t\t\tpadding: theme.spacing(3),\n// \t\t},\n// \t},\n// \tstepper: {\n// \t\tpadding: theme.spacing(3, 0, 5),\n// \t},\n// \tbuttons: {\n// \t\tdisplay: \"flex\",\n// \t\tjustifyContent: \"flex-end\",\n// \t},\n// \tbutton: {\n// \t\tmarginTop: theme.spacing(3),\n// \t\tmarginLeft: theme.spacing(1),\n// \t},\n// }));\n\n// export default function Checkout(props) {\n// \t\tconst user = useSelector((state) => state.user);\n// \tconst selectedAddress = user.address.slice(user.address.length - 1)[0];\n\n// \tconst steps = [\"Shipping address\", \"Review your order\", \" Payment details\"];\n// \tconst classes = useStyles();\n// \tconst [activeStep, setActiveStep] = React.useState(0);\n// \tconst dispatch = useDispatch();\n\n// \tconst auth = useSelector((state) => state.auth);\n// \tconst cart = useSelector((state) => state.cart);\n\n// \tconst handleNext = () => {\n// \t\tsetActiveStep(activeStep + 1);\n// \t};\n\n// \tconst handleBack = () => {\n// \t\tsetActiveStep(activeStep - 1);\n// \t};\n\n// \t//Address from Hooks............\n\n// \t//Order confirm hooksssss............\n// \tconst [confirmOrder, setConfirmOrder] = useState(\"\");\n// \tconst onConfirmOrder = () => {\n// \t\tconst totalAmount = Object.keys(cart.cartItems).reduce(\n// \t\t\t(totalPrice, key) => {\n// \t\t\t\tconst { price, qty } = cart.cartItems[key];\n// \t\t\t\treturn totalPrice + price * qty;\n// \t\t\t},\n// \t\t\t0\n// \t\t);\n// \t\tconst items = Object.keys(cart.cartItems).map((key) => ({\n// \t\t\tproductId: key,\n// \t\t\tpayablePrice: cart.cartItems[key].price,\n// \t\t\tpurchasedQty: cart.cartItems[key].qty,\n// \t\t}));\n// \t\tconst payload = {\n// \t\t\taddressId: selectedAddress._id,\n// \t\t\ttotalAmount,\n// \t\t\titems,\n// \t\t\tpaymentStatus: \"pending\",\n// \t\t\tpaymentType: \"cod\",\n// \t\t};\n\n// \t\tconsole.log(payload);\n// \t\tdispatch(addOrder(payload));\n// \t\tsetConfirmOrder(true);\n// \t};\n\n// \t// useEffect(() => {\n// \t// \tdispatch(getAddress());\n// \t// }, [user.address]);\n\n// \tuseEffect(() => {\n// \t\tauth.authenticate && dispatch(getAddress());\n// \t\tauth.authenticate && dispatch(getCartItems());\n// \t}, [auth.authenticate]);\n\n// \tfunction getStepContent(activeStep) {\n// \t\tswitch (activeStep) {\n// \t\t\tcase 0:\n// \t\t\t\treturn <AddressForm />;\n// \t\t\tcase 1:\n// \t\t\t\treturn <Review />;\n// \t\t\tcase 2:\n// \t\t\t\treturn <PaymentForm />;\n// \t\t\tdefault:\n// \t\t\t\tthrow new Error(\"Unknown step\");\n// \t\t}\n// \t}\n\n// \t//Address form............\n\n// \tfunction AddressForm(props) {\n// \t\tconst previousAddress = user.address;\n// \t\tconst oldAddress = user.address.slice(user.address.length - 1)[0];\n// \t\tconsole.log(oldAddress);\n// \t\t// useEffect(() => {\n// \t\t// \tdispatch(getAddress());\n// \t\t// }, [user.address]);\n// \t\tconst [name, setName] = useState(oldAddress ? oldAddress.name : \"\");\n\n// \t\tconst [mobileNumber, setMobileNumber] = useState(\n// \t\t\toldAddress ? oldAddress.mobileNumber : \"\"\n// \t\t);\n// \t\tconst [zipCode, setZipCode] = useState(\n// \t\t\toldAddress ? oldAddress.zipCode : \"\"\n// \t\t);\n\n// \t\tconst [address, setAddress] = useState(\n// \t\t\toldAddress ? oldAddress.address : \"\"\n// \t\t);\n// \t\tconst [cityDistrict, setCityDistrict] = useState(\n// \t\t\toldAddress ? oldAddress.cityDistrict : \"\"\n// \t\t);\n\n// \t\tconst [alternatePhone, setAlternatePhone] = useState(\n// \t\t\toldAddress ? oldAddress.alternatePhone : \"\"\n// \t\t);\n\n// \t\tconsole.log(oldAddress);\n// \t\tconst [id, setId] = useState(oldAddress ? oldAddress._id : \"\");\n// \t\tconsole.log(name);\n\n// \t\tconst onAddressSubmit = (e) => {\n// \t\t\tconst payload = {\n// \t\t\t\taddress: {\n// \t\t\t\t\tname,\n// \t\t\t\t\tmobileNumber,\n// \t\t\t\t\tzipCode,\n// \t\t\t\t\taddress,\n// \t\t\t\t\tcityDistrict,\n// \t\t\t\t\talternatePhone,\n// \t\t\t\t},\n// \t\t\t};\n// \t\t\tconsole.log(payload);\n// \t\t\tif (id) {\n// \t\t\t\tpayload.address._id = id;\n// \t\t\t}\n// \t\t\tif (name==''){return Swal.fire({\n// \t\t\t\t\ticon: \"error\",\n// \t\t\t\t\ttitle: \"Oops...\",\n// \t\t\t\t\ttext: \"Name is required...!\", })}\n// \t\t\tif(address==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"Address is required....!\",})}\n\n// \t\t\tif(mobileNumber==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"Mobile number is required..!\",})}\n// \t\t\tif(zipCode==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"Zipcode is required..!\",})}\n// \t\t\tif(cityDistrict==''){return Swal.fire({icon: \"error\",title: \"Oops...\",text: \"City/district is required..!\",})}\n\t\t\t\n\n// \t\t\tdispatch(addAddress(payload));\n// \t\t\tsetActiveStep(activeStep + 1);\n// \t\t};\n\n// \t\treturn (\n// \t\t\t<React.Fragment>\n// \t\t\t\t<div className='mainContainer' style={{ fontSize: \"1.8rem\" }}>\n// \t\t\t\t\t<Typography variant='h6' gutterBottom>\n// \t\t\t\t\t\t<h4>Shipping address</h4>\n// \t\t\t\t\t</Typography>\n\n// \t\t\t\t\t<div class='content'>\n// \t\t\t\t\t\t<form action='#'>\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\t<div class='user-details'>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Full Name</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your name'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={name}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Full Address</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your address'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={address}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>City/District</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your email'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={cityDistrict}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setCityDistrict(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Zip Code</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your number'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tvalue={zipCode}\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setZipCode(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Phone Number</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tvalue={mobileNumber}\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Phone Number'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setMobileNumber(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div class='input-box'>\n// \t\t\t\t\t\t\t\t\t<span class='details'>Secondary Phone (optional)</span>\n// \t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tvalue={alternatePhone}\n// \t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\tplaceholder='Enter Secondary Phone'\n// \t\t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t\t\tonChange={(e) => setAlternatePhone(e.target.value)}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t{/* <div class='gender-details'>\n// \t\t\t\t\t\t\t\t<input type='radio' name='gender' id='dot-1' />\n// \t\t\t\t\t\t\t\t<input type='radio' name='gender' id='dot-2' />\n// \t\t\t\t\t\t\t\t<input type='radio' name='gender' id='dot-3' />\n// \t\t\t\t\t\t\t\t<span class='gender-title'>Gender</span>\n// \t\t\t\t\t\t\t\t<div class='category'>\n// \t\t\t\t\t\t\t\t\t<label for='dot-1'>\n// \t\t\t\t\t\t\t\t\t\t<span class='dot one'></span>\n// \t\t\t\t\t\t\t\t\t\t<span class='gender'>Male</span>\n// \t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t\t<label for='dot-2'>\n// \t\t\t\t\t\t\t\t\t\t<span class='dot two'></span>\n// \t\t\t\t\t\t\t\t\t\t<span class='gender'>Female</span>\n// \t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t\t<label for='dot-3'>\n// \t\t\t\t\t\t\t\t\t\t<span class='dot three'></span>\n// \t\t\t\t\t\t\t\t\t\t<span class='gender'>Prefer not to say</span>\n// \t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div> */}\n// \t\t\t\t\t\t\t<div class='button'>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\ttype='submit'\n// \t\t\t\t\t\t\t\t\tvalue='Submit Address'\n// \t\t\t\t\t\t\t\t\tonClick={onAddressSubmit}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</form>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t{/* <Button\n// \t\t\t\t\t\tfullWidth\n// \t\t\t\t\t\tstyle={{ backgroundColor: \"yellow\", color: \"gray\" }}\n\t\t\t\t\t\t\n// \t\t\t\t\t\t<h5>Submit Address</h5>\n// \t\t\t\t\t</Button> */}\n// \t\t\t\t</div>\n// \t\t\t</React.Fragment>\n// \t\t);\n// \t}\n\n// \tfunction PaymentForm() {\n// \t\tconst [paymentType, setPaymentType] = useState(\"\");\n// \t\treturn (\n// \t\t\t<React.Fragment>\n// \t\t\t\t<Typography variant='h6' gutterBottom>\n// \t\t\t\t\tPayment method\n// \t\t\t\t</Typography>\n// \t\t\t\t<Grid container spacing={3}>\n// \t\t\t\t\t<FormControl component='fieldset'>\n// \t\t\t\t\t\t{/* <FormLabel component='legend'>Payment Type</FormLabel> */}\n// \t\t\t\t\t\t<RadioGroup\n// \t\t\t\t\t\t\taria-label='Payment Type'\n// \t\t\t\t\t\t\tname='gender1'\n// \t\t\t\t\t\t\tvalue={paymentType}\n// \t\t\t\t\t\t\tonChange={(e) => setPaymentType(e.target.value)}>\n// \t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\tvalue='Bkash'\n// \t\t\t\t\t\t\t\tcontrol={<Radio />}\n// \t\t\t\t\t\t\t\tlabel='Bkash'\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\tvalue='ssl'\n// \t\t\t\t\t\t\t\tcontrol={<Radio />}\n// \t\t\t\t\t\t\t\tlabel='SSL Commerce'\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\tvalue='cod'\n// \t\t\t\t\t\t\t\tcontrol={<Radio />}\n// \t\t\t\t\t\t\t\tlabel='Cash On Delivery'\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</RadioGroup>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<Button\n// \t\t\t\t\t\tfullWidth\n// \t\t\t\t\t\tstyle={{ color: \"black\", backgroundColor: \"yellow\" }}\n// \t\t\t\t\t\tonClick={onConfirmOrder}>\n// \t\t\t\t\t\tConfirm Order\n// \t\t\t\t\t</Button>\n// \t\t\t\t</Grid>\n// \t\t\t</React.Fragment>\n// \t\t);\n// \t}\n\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t\t<div className='mainContainer'>\n// \t\t\t\t{/* <CssBaseline /> */}\n// \t\t\t\t<AppBar position='absolute' color='default' className={classes.appBar}>\n// \t\t\t\t\t<Toolbar>\n// \t\t\t\t\t\t<Typography variant='h6' color='inherit' noWrap>\n// \t\t\t\t\t\t\tCompany name\n// \t\t\t\t\t\t</Typography>\n// \t\t\t\t\t</Toolbar>\n// \t\t\t\t</AppBar>\n// \t\t\t\t<main className={classes.layout}>\n// \t\t\t\t\t<Paper className={classes.paper}>\n// \t\t\t\t\t\t<Typography component='h1' variant='h4' align='center'>\n// \t\t\t\t\t\t\t<h3>Checkout</h3>\n// \t\t\t\t\t\t</Typography>\n// \t\t\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\n// \t\t\t\t\t\t\t{steps.map((label) => (\n// \t\t\t\t\t\t\t\t<Step key={label}>\n// \t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n// \t\t\t\t\t\t\t\t</Step>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</Stepper>\n// \t\t\t\t\t\t<React.Fragment>\n// \t\t\t\t\t\t\t{activeStep === steps.length ? (\n// \t\t\t\t\t\t\t\t<React.Fragment>\n// \t\t\t\t\t\t\t\t\t<Typography variant='h5' gutterBottom>\n// \t\t\t\t\t\t\t\t\t\tThank you for your order.\n// \t\t\t\t\t\t\t\t\t</Typography>\n// \t\t\t\t\t\t\t\t\t<Typography variant='subtitle1'>\n// \t\t\t\t\t\t\t\t\t\tYour order number is #2001539. We have emailed your order\n// \t\t\t\t\t\t\t\t\t\tconfirmation, and will send you an update when your order\n// \t\t\t\t\t\t\t\t\t\thas shipped.\n// \t\t\t\t\t\t\t\t\t</Typography>\n// \t\t\t\t\t\t\t\t</React.Fragment>\n// \t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t<React.Fragment>\n// \t\t\t\t\t\t\t\t\t{getStepContent(activeStep)}\n// \t\t\t\t\t\t\t\t\t<div className={classes.buttons}>\n// \t\t\t\t\t\t\t\t\t\t{activeStep !== 0 && (\n// \t\t\t\t\t\t\t\t\t\t\t<Button onClick={handleBack} className={classes.button}>\n// \t\t\t\t\t\t\t\t\t\t\t\tBack\n// \t\t\t\t\t\t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n// \t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n// \t\t\t\t\t\t\t\t\t\t\tonClick={handleNext}\n// \t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}>\n// \t\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\n// \t\t\t\t\t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t</React.Fragment>\n// \t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t</React.Fragment>\n// \t\t\t\t\t</Paper>\n// \t\t\t\t\t<Copyright />\n// \t\t\t\t</main>\n// \t\t\t</div>\n// \t\t</React.Fragment>\n// \t);\n// }\n"]},"metadata":{},"sourceType":"module"}