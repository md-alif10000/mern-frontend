{"ast":null,"code":"import axios from \"../helpers/axios.js\";\nimport { productConstants } from \"./constants\";\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axios.get(`/products/${slug}`);\n    console.log(res);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    } else {// dispatch({\n      //     type\n      // })\n    }\n  };\n};\nexport const getProductPage = payload => {\n  return async dispatch => {\n    try {\n      const {\n        params\n      } = payload;\n      const {\n        cid,\n        type\n      } = params;\n      console.log(cid);\n      console.log(type);\n      const res = await axios.get(`/page/${cid}/${type}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_PAGE_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          page\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: {\n            page\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getProductDetailsById = payload => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST\n    });\n    let res;\n\n    try {\n      const {\n        productId\n      } = payload.params;\n      console.log(typeof productId);\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n        payload: {\n          productDetails: res.data.product\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n        payload: {\n          error\n        }\n      });\n    }\n  };\n};\nexport const getProducts = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_REQUEST\n      });\n      const res = await axios.get(`/getAllProducts`);\n\n      if (res.status === 200) {\n        const {\n          products\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n          payload: {\n            products\n          }\n        });\n      } else {\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_FAILURE\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addReview = () => {\n  return as;\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/actions/product.action.js"],"names":["axios","productConstants","getProductsBySlug","slug","dispatch","res","get","console","log","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductPage","params","cid","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","error","GET_PRODUCT_PAGE_FAILURE","getProductDetailsById","GET_PRODUCT_DETAILS_BY_ID_REQUEST","productId","GET_PRODUCT_DETAILS_BY_ID_SUCCESS","productDetails","product","GET_PRODUCT_DETAILS_BY_ID_FAILURE","getProducts","GET_ALL_PRODUCTS_REQUEST","products","GET_ALL_PRODUCTS_SUCCESS","GET_ALL_PRODUCTS_FAILURE","addReview","as"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios.js\";\nimport { productConstants } from \"./constants\";\n\nexport const getProductsBySlug = (slug) => {\n\treturn async (dispatch) => {\n\t\tconst res = await axios.get(`/products/${slug}`);\n\t\tconsole.log(res);\n\t\tif (res.status === 200) {\n\t\t\tdispatch({\n\t\t\t\ttype: productConstants.GET_PRODUCTS_BY_SLUG,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t} else {\n\t\t\t// dispatch({\n\t\t\t//     type\n\t\t\t// })\n\t\t}\n\t};\n};\n\nexport const getProductPage = (payload) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst { params } = payload;\n\t\t\tconst { cid, type } = params;\n\n\t\t\tconsole.log(cid);\n            console.log(type)\n\t\t\tconst res = await axios.get(`/page/${cid}/${type}`);\n\t\t\tconsole.log(res);\n\t\t\tdispatch({ type: productConstants.GET_PRODUCT_PAGE_REQUEST });\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst { page } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n\t\t\t\t\tpayload: { page },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: productConstants.GET_PRODUCT_PAGE_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n\n\n\nexport const getProductDetailsById=(payload)=>{\n\treturn async dispatch=>{\n\t\tdispatch({type:productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST})\n\t\tlet res\n\t\ttry{\n\t\t\tconst {productId}=payload.params;\n\t\t\tconsole.log(typeof(productId))\n\t\t\tres=await axios.get(`/product/${productId}`)\n\t\t\tconsole.log(res)\n\n\t\t\tdispatch({type:productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n\t\t\tpayload:{productDetails:res.data.product}})\n\t\t}catch(error){\n\t\t\tconsole.log(error)\n\t\t\tdispatch({type:productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n\t\t\tpayload:{error}})\n\t\t}\n\t}\n}\n\n\n\n\nexport const getProducts = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\n\t\t\tconst res = await axios.get(`/getAllProducts`);\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst { products } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n\t\t\t\t\tpayload: { products },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n\nexport const addReview=()=>{\n\treturn as\n}"]},"metadata":{},"sourceType":"module"}