{"ast":null,"code":"import _regeneratorRuntime from\"/home/mdalif/Desktop/coding/MERN/mern-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mdalif/Desktop/coding/MERN/mern-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"../helpers/axios\";import{categoryConstants}from\"./constants\";var getAllCategory=function getAllCategory(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res,categoryList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:categoryConstants.GET_ALL_CATEGORIES_REQUEST});_context.next=3;return axios.get(\"category/getcategory\");case 3:res=_context.sent;console.log(res);if(res.status===200){categoryList=res.data.categoryList;dispatch({type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,payload:{categories:categoryList}});}else{dispatch({type:categoryConstants.GET_ALL_CATEGORIES_FAILURE,payload:{error:res.data.error}});}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getSubCategory=function getSubCategory(parentId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:categoryConstants.GET_SUB_CATEGORY_REQUEST});_context2.next=3;return axios.get(\"subcategory/\".concat(parentId));case 3:res=_context2.sent;console.log(res);if(res.status==200){dispatch({type:categoryConstants.GET_SUB_CATEGORY_SUCCESS,payload:res.data});}else{dispatch({type:categoryConstants.GET_SUB_CATEGORY_FAILURE,payload:{error:res.data.error}});}case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export{getAllCategory};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/MERN/mern-frontend/src/actions/category.action.js"],"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","get","res","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","getSubCategory","parentId","GET_SUB_CATEGORY_REQUEST","GET_SUB_CATEGORY_SUCCESS","GET_SUB_CATEGORY_FAILURE"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,KAAkB,kBAAlB,CACA,OAASC,iBAAT,KAAkC,aAAlC,CAEC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC1B,+FAAO,iBAAMC,QAAN,uIAEHA,QAAQ,CAAC,CAAEC,IAAI,CAAEH,iBAAiB,CAACI,0BAA1B,CAAD,CAAR,CAFG,sBAGeL,CAAAA,KAAK,CAACM,GAAN,wBAHf,QAGGC,GAHH,eAIHC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAwB,CAEbC,YAFa,CAEIJ,GAAG,CAACK,IAFR,CAEbD,YAFa,CAKpBR,QAAQ,CAAC,CACLC,IAAI,CAAEH,iBAAiB,CAACY,0BADnB,CAELC,OAAO,CAAE,CAAEC,UAAU,CAAEJ,YAAd,CAFJ,CAAD,CAAR,CAIH,CATD,IASO,CACHR,QAAQ,CAAC,CACLC,IAAI,CAAEH,iBAAiB,CAACe,0BADnB,CAELF,OAAO,CAAE,CAAEG,KAAK,CAAEV,GAAG,CAACK,IAAJ,CAASK,KAAlB,CAFJ,CAAD,CAAR,CAIH,CAnBE,sDAAP,+DAuBH,CAxBA,CA0BD,MAAO,IAAMC,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,CAACC,QAAD,CAAY,CACpC,gGAAO,kBAAMhB,QAAN,8HACFA,QAAQ,CAAC,CAAEC,IAAI,CAAEH,iBAAiB,CAACmB,wBAA1B,CAAD,CAAR,CADE,uBAEYpB,CAAAA,KAAK,CAACM,GAAN,uBAAyBa,QAAzB,EAFZ,QAEAZ,GAFA,gBAGNC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAJ,EAAc,GAAlB,CAAuB,CAEtBP,QAAQ,CAAC,CACRC,IAAI,CAAEH,iBAAiB,CAACoB,wBADhB,CAERP,OAAO,CAAGP,GAAG,CAACK,IAFN,CAAD,CAAR,CAIA,CAND,IAMO,CACNT,QAAQ,CAAC,CACRC,IAAI,CAAEH,iBAAiB,CAACqB,wBADhB,CAERR,OAAO,CAAE,CAAEG,KAAK,CAAEV,GAAG,CAACK,IAAJ,CAASK,KAAlB,CAFD,CAAD,CAAR,CAIA,CAfK,wDAAP,iEAmBH,CApBM,CA2BP,OAAQf,cAAR","sourcesContent":["import axios from \"../helpers/axios\";\nimport { categoryConstants } from \"./constants\";\n\n const getAllCategory = () => {\n    return async dispatch => {\n\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\n        const res = await axios.get(`category/getcategory`);\n        console.log(res);\n        if (res.status === 200) {\n\n            const {categoryList}  = res.data;\n  \n\n            dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                payload: { categories: categoryList }\n            });\n        } else {\n            dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n\n    }\n}\n\nexport const getSubCategory=(parentId)=>{\n    return async dispatch=>{\n         dispatch({ type: categoryConstants.GET_SUB_CATEGORY_REQUEST });\n\t\t\t\t\tconst res = await axios.get(`subcategory/${parentId}`);\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\tif (res.status == 200) {\n\t\t\t\t\t\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: categoryConstants.GET_SUB_CATEGORY_SUCCESS,\n\t\t\t\t\t\t\tpayload:  res.data,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: categoryConstants.GET_SUB_CATEGORY_FAILURE,\n\t\t\t\t\t\t\tpayload: { error: res.data.error },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n    }\n\n}\n\n\n\n\n\n\nexport {getAllCategory}"]},"metadata":{},"sourceType":"module"}