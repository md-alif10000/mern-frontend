{"ast":null,"code":"import { userConstants } from \"./constants.js\";\nimport { cartConstants } from \"./constants.js\";\nimport axios from \"../helpers/axios\";\nexport const getAddress = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/user/getaddress\");\n      dispatch({\n        type: userConstants.GET_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          userAddress: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addAddress = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"/user/address/create\", {\n        payload\n      });\n      dispatch({\n        type: userConstants.ADD_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status == 201) {\n        console.log(res.data);\n        var {\n          address\n        } = res.data;\n        var address = address.address;\n        console.log(address);\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/addOrder`, {\n        payload\n      });\n      dispatch({\n        type: userConstants.ADD_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: cartConstants.RESET_CART\n        });\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_SUCCESS,\n          payload: {\n            order\n          }\n        });\n        const {\n          address: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getOrders = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/getOrders`);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          orders\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_SUCCESS,\n          payload: {\n            orders\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; // single order with complete info and delivery location\n\nexport const getOrder = payload => {\n  return async dispatch => {\n    console.log(payload);\n\n    try {\n      const res = axios.get(\"/getOrder\", {\n        payload\n      });\n      console.log(res);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_DETAILS_REQUEST\n      });\n\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n          payload: {\n            order\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/mdalif/Desktop/coding/Flipkart_Clone/flipkart_clone/src/actions/user.action.js"],"names":["userConstants","cartConstants","axios","getAddress","dispatch","res","get","type","GET_USER_ADDRESS_REQUEST","status","userAddress","address","data","GET_USER_ADDRESS_SUCCESS","payload","error","GET_USER_ADDRESS_FAILURE","console","log","addAddress","post","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","addOrder","ADD_USER_ORDER_REQUEST","order","RESET_CART","ADD_USER_ORDER_SUCCESS","ADD_USER_ORDER_FAILURE","getOrders","GET_USER_ORDER_REQUEST","orders","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","getOrder","GET_USER_ORDER_DETAILS_REQUEST","GET_USER_ORDER_DETAILS_SUCCESS","GET_USER_ORDER_DETAILS_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from \"./constants.js\";\nimport { cartConstants } from \"./constants.js\";\nimport axios from \"../helpers/axios\";\n\nexport const getAddress = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(\"/user/getaddress\");\n\t\t\tdispatch({ type: userConstants.GET_USER_ADDRESS_REQUEST });\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst {\n\t\t\t\t\tuserAddress: { address },\n\t\t\t\t} = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.GET_USER_ADDRESS_SUCCESS,\n\t\t\t\t\tpayload: { address },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.GET_USER_ADDRESS_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nexport const addAddress = (payload) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst res = await axios.post(\"/user/address/create\", { payload });\n\t\t\tdispatch({ type: userConstants.ADD_USER_ADDRESS_REQUEST });\n\n\t\t\tif (res.status == 201) {\n\t\t\t\tconsole.log(res.data);\n\n\t\t\t\tvar { address } = res.data;\n\t\t\t\tvar address = address.address;\n\t\t\t\tconsole.log(address);\n\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.ADD_USER_ADDRESS_SUCCESS,\n\t\t\t\t\tpayload: { address },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.ADD_USER_ADDRESS_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nexport const addOrder = (payload) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst res = await axios.post(`/addOrder`, {payload});\n\t\t\tdispatch({ type: userConstants.ADD_USER_ORDER_REQUEST });\n\t\t\tif (res.status === 201) {\n\t\t\t\tconsole.log(res);\n\t\t\t\tconst { order } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: cartConstants.RESET_CART,\n\t\t\t\t});\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.ADD_USER_ORDER_SUCCESS,\n\t\t\t\t\tpayload: { order },\n\t\t\t\t});\n\t\t\t\tconst {\n\t\t\t\t\taddress: { address },\n\t\t\t\t} = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.ADD_USER_ADDRESS_SUCCESS,\n\t\t\t\t\tpayload: { address },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.ADD_USER_ORDER_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n\nexport const getOrders = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(`/getOrders`);\n\t\t\tdispatch({ type: userConstants.GET_USER_ORDER_REQUEST });\n\t\t\tif (res.status === 200) {\n\t\t\t\tconsole.log(res);\n\t\t\t\tconst { orders } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.GET_USER_ORDER_SUCCESS,\n\t\t\t\t\tpayload: { orders },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.GET_USER_ORDER_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n// single order with complete info and delivery location\nexport const getOrder = (payload) => {\n\treturn async (dispatch) => {\n\t\tconsole.log(payload)\n\t\ttry {\n\t\t\tconst res =  axios.get(\"/getOrder\",{payload});\n\t\t\tconsole.log(res);\n\n\t\t\tdispatch({ type: userConstants.GET_USER_ORDER_DETAILS_REQUEST });\n\t\t\tif (res.status === 200) {\n\t\t\t\tconsole.log(res);\n\t\t\t\tconst { order } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n\t\t\t\t\tpayload: { order },\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { error } = res.data;\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n\t\t\t\t\tpayload: { error },\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};"]},"metadata":{},"sourceType":"module"}